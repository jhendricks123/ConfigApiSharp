//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConfigApiSharp.ServerCommandService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class ProductInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildConfigurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BuildDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MajorVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MinorVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ProductLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SLCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SubProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid VendorIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildConfiguration {
            get {
                return this.BuildConfigurationField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildConfigurationField, value) != true)) {
                    this.BuildConfigurationField = value;
                    this.RaisePropertyChanged("BuildConfiguration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BuildDate {
            get {
                return this.BuildDateField;
            }
            set {
                if ((this.BuildDateField.Equals(value) != true)) {
                    this.BuildDateField = value;
                    this.RaisePropertyChanged("BuildDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildNumber {
            get {
                return this.BuildNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildNumberField, value) != true)) {
                    this.BuildNumberField = value;
                    this.RaisePropertyChanged("BuildNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MajorVersion {
            get {
                return this.MajorVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.MajorVersionField, value) != true)) {
                    this.MajorVersionField = value;
                    this.RaisePropertyChanged("MajorVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MinorVersion {
            get {
                return this.MinorVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.MinorVersionField, value) != true)) {
                    this.MinorVersionField = value;
                    this.RaisePropertyChanged("MinorVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductCode {
            get {
                return this.ProductCodeField;
            }
            set {
                if ((this.ProductCodeField.Equals(value) != true)) {
                    this.ProductCodeField = value;
                    this.RaisePropertyChanged("ProductCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ProductLine {
            get {
                return this.ProductLineField;
            }
            set {
                if ((this.ProductLineField.Equals(value) != true)) {
                    this.ProductLineField = value;
                    this.RaisePropertyChanged("ProductLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SLC {
            get {
                return this.SLCField;
            }
            set {
                if ((object.ReferenceEquals(this.SLCField, value) != true)) {
                    this.SLCField = value;
                    this.RaisePropertyChanged("SLC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceVersion {
            get {
                return this.ServiceVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceVersionField, value) != true)) {
                    this.ServiceVersionField = value;
                    this.RaisePropertyChanged("ServiceVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SubProduct {
            get {
                return this.SubProductField;
            }
            set {
                if ((this.SubProductField.Equals(value) != true)) {
                    this.SubProductField = value;
                    this.RaisePropertyChanged("SubProduct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid VendorId {
            get {
                return this.VendorIdField;
            }
            set {
                if ((this.VendorIdField.Equals(value) != true)) {
                    this.VendorIdField = value;
                    this.RaisePropertyChanged("VendorId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SystemLicenseInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class SystemLicenseInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExpiresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] FeaturesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasLicenseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTrialLicenseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductSkuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SLCField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Expires {
            get {
                return this.ExpiresField;
            }
            set {
                if ((this.ExpiresField.Equals(value) != true)) {
                    this.ExpiresField = value;
                    this.RaisePropertyChanged("Expires");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpiryDate {
            get {
                return this.ExpiryDateField;
            }
            set {
                if ((this.ExpiryDateField.Equals(value) != true)) {
                    this.ExpiryDateField = value;
                    this.RaisePropertyChanged("ExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Features {
            get {
                return this.FeaturesField;
            }
            set {
                if ((object.ReferenceEquals(this.FeaturesField, value) != true)) {
                    this.FeaturesField = value;
                    this.RaisePropertyChanged("Features");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasLicense {
            get {
                return this.HasLicenseField;
            }
            set {
                if ((this.HasLicenseField.Equals(value) != true)) {
                    this.HasLicenseField = value;
                    this.RaisePropertyChanged("HasLicense");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTrialLicense {
            get {
                return this.IsTrialLicenseField;
            }
            set {
                if ((this.IsTrialLicenseField.Equals(value) != true)) {
                    this.IsTrialLicenseField = value;
                    this.RaisePropertyChanged("IsTrialLicense");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductSku {
            get {
                return this.ProductSkuField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductSkuField, value) != true)) {
                    this.ProductSkuField = value;
                    this.RaisePropertyChanged("ProductSku");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SLC {
            get {
                return this.SLCField;
            }
            set {
                if ((object.ReferenceEquals(this.SLCField, value) != true)) {
                    this.SLCField = value;
                    this.RaisePropertyChanged("SLC");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SmartClientVersion", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class SmartClientVersion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BetaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ForceUpgradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MajorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.UpgradeInfo UpgradeInfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Beta {
            get {
                return this.BetaField;
            }
            set {
                if ((this.BetaField.Equals(value) != true)) {
                    this.BetaField = value;
                    this.RaisePropertyChanged("Beta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ForceUpgrade {
            get {
                return this.ForceUpgradeField;
            }
            set {
                if ((this.ForceUpgradeField.Equals(value) != true)) {
                    this.ForceUpgradeField = value;
                    this.RaisePropertyChanged("ForceUpgrade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Major {
            get {
                return this.MajorField;
            }
            set {
                if ((this.MajorField.Equals(value) != true)) {
                    this.MajorField = value;
                    this.RaisePropertyChanged("Major");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Minor {
            get {
                return this.MinorField;
            }
            set {
                if ((this.MinorField.Equals(value) != true)) {
                    this.MinorField = value;
                    this.RaisePropertyChanged("Minor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Revision {
            get {
                return this.RevisionField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionField, value) != true)) {
                    this.RevisionField = value;
                    this.RaisePropertyChanged("Revision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.UpgradeInfo UpgradeInfo {
            get {
                return this.UpgradeInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.UpgradeInfoField, value) != true)) {
                    this.UpgradeInfoField = value;
                    this.RaisePropertyChanged("UpgradeInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpgradeInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class UpgradeInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PortField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Hostname {
            get {
                return this.HostnameField;
            }
            set {
                if ((object.ReferenceEquals(this.HostnameField, value) != true)) {
                    this.HostnameField = value;
                    this.RaisePropertyChanged("Hostname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Port {
            get {
                return this.PortField;
            }
            set {
                if ((this.PortField.Equals(value) != true)) {
                    this.PortField = value;
                    this.RaisePropertyChanged("Port");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class LoginInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.TimeDuration TimeToLiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TimeToLiveLimitedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationTime {
            get {
                return this.RegistrationTimeField;
            }
            set {
                if ((this.RegistrationTimeField.Equals(value) != true)) {
                    this.RegistrationTimeField = value;
                    this.RaisePropertyChanged("RegistrationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.TimeDuration TimeToLive {
            get {
                return this.TimeToLiveField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeToLiveField, value) != true)) {
                    this.TimeToLiveField = value;
                    this.RaisePropertyChanged("TimeToLive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TimeToLiveLimited {
            get {
                return this.TimeToLiveLimitedField;
            }
            set {
                if ((this.TimeToLiveLimitedField.Equals(value) != true)) {
                    this.TimeToLiveLimitedField = value;
                    this.RaisePropertyChanged("TimeToLiveLimited");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimeDuration", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class TimeDuration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MicroSecondsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MicroSeconds {
            get {
                return this.MicroSecondsField;
            }
            set {
                if ((this.MicroSecondsField.Equals(value) != true)) {
                    this.MicroSecondsField = value;
                    this.RaisePropertyChanged("MicroSeconds");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorizationActionType", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    public enum AuthorizationActionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LogOn = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class UserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sid {
            get {
                return this.sidField;
            }
            set {
                if ((object.ReferenceEquals(this.sidField, value) != true)) {
                    this.sidField = value;
                    this.RaisePropertyChanged("sid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConfigurationInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class ConfigurationInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.AlertTypeGroupInfo[] AlertTypeGroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.AlertTypeInfo[] AlertTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.ApplicationSecurityInfo ApplicationAccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.AudioMessageInfo[] AudioMessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.BookmarkSettingInfo BookmarkSettingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.CameraGroupInfo[] CameraGroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.DeviceMappingInfo[] DeviceMappingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.EventTypeGroupInfo[] EventTypeGroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.EventTypeInfo[] EventTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FailoverCheckIntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.InputGroupInfo[] InputGroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.LicenseInfo[] LicensesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.MatrixMonitorInfo[] MatrixMonitorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.MetadataDeviceGroupInfo[] MetadataDeviceGroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.MicrophoneGroupInfo[] MicrophoneGroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.OutputGroupInfo[] OutputGroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.RecorderInfo[] RecordersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.RetentionSettingInfo RetentionSettingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ServerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.ServerOption[] ServerOptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.SpeakerGroupInfo[] SpeakerGroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.SystemEventTypeInfo[] SystemEventTypesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.AlertTypeGroupInfo[] AlertTypeGroups {
            get {
                return this.AlertTypeGroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.AlertTypeGroupsField, value) != true)) {
                    this.AlertTypeGroupsField = value;
                    this.RaisePropertyChanged("AlertTypeGroups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.AlertTypeInfo[] AlertTypes {
            get {
                return this.AlertTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.AlertTypesField, value) != true)) {
                    this.AlertTypesField = value;
                    this.RaisePropertyChanged("AlertTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.ApplicationSecurityInfo ApplicationAccess {
            get {
                return this.ApplicationAccessField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationAccessField, value) != true)) {
                    this.ApplicationAccessField = value;
                    this.RaisePropertyChanged("ApplicationAccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.AudioMessageInfo[] AudioMessages {
            get {
                return this.AudioMessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.AudioMessagesField, value) != true)) {
                    this.AudioMessagesField = value;
                    this.RaisePropertyChanged("AudioMessages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.BookmarkSettingInfo BookmarkSettings {
            get {
                return this.BookmarkSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.BookmarkSettingsField, value) != true)) {
                    this.BookmarkSettingsField = value;
                    this.RaisePropertyChanged("BookmarkSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.CameraGroupInfo[] CameraGroups {
            get {
                return this.CameraGroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.CameraGroupsField, value) != true)) {
                    this.CameraGroupsField = value;
                    this.RaisePropertyChanged("CameraGroups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.DeviceMappingInfo[] DeviceMappings {
            get {
                return this.DeviceMappingsField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceMappingsField, value) != true)) {
                    this.DeviceMappingsField = value;
                    this.RaisePropertyChanged("DeviceMappings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.EventTypeGroupInfo[] EventTypeGroups {
            get {
                return this.EventTypeGroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.EventTypeGroupsField, value) != true)) {
                    this.EventTypeGroupsField = value;
                    this.RaisePropertyChanged("EventTypeGroups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.EventTypeInfo[] EventTypes {
            get {
                return this.EventTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.EventTypesField, value) != true)) {
                    this.EventTypesField = value;
                    this.RaisePropertyChanged("EventTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FailoverCheckInterval {
            get {
                return this.FailoverCheckIntervalField;
            }
            set {
                if ((this.FailoverCheckIntervalField.Equals(value) != true)) {
                    this.FailoverCheckIntervalField = value;
                    this.RaisePropertyChanged("FailoverCheckInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.InputGroupInfo[] InputGroups {
            get {
                return this.InputGroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.InputGroupsField, value) != true)) {
                    this.InputGroupsField = value;
                    this.RaisePropertyChanged("InputGroups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.LicenseInfo[] Licenses {
            get {
                return this.LicensesField;
            }
            set {
                if ((object.ReferenceEquals(this.LicensesField, value) != true)) {
                    this.LicensesField = value;
                    this.RaisePropertyChanged("Licenses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.MatrixMonitorInfo[] MatrixMonitors {
            get {
                return this.MatrixMonitorsField;
            }
            set {
                if ((object.ReferenceEquals(this.MatrixMonitorsField, value) != true)) {
                    this.MatrixMonitorsField = value;
                    this.RaisePropertyChanged("MatrixMonitors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.MetadataDeviceGroupInfo[] MetadataDeviceGroups {
            get {
                return this.MetadataDeviceGroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.MetadataDeviceGroupsField, value) != true)) {
                    this.MetadataDeviceGroupsField = value;
                    this.RaisePropertyChanged("MetadataDeviceGroups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.MicrophoneGroupInfo[] MicrophoneGroups {
            get {
                return this.MicrophoneGroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.MicrophoneGroupsField, value) != true)) {
                    this.MicrophoneGroupsField = value;
                    this.RaisePropertyChanged("MicrophoneGroups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.OutputGroupInfo[] OutputGroups {
            get {
                return this.OutputGroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.OutputGroupsField, value) != true)) {
                    this.OutputGroupsField = value;
                    this.RaisePropertyChanged("OutputGroups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.RecorderInfo[] Recorders {
            get {
                return this.RecordersField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordersField, value) != true)) {
                    this.RecordersField = value;
                    this.RaisePropertyChanged("Recorders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.RetentionSettingInfo RetentionSettings {
            get {
                return this.RetentionSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.RetentionSettingsField, value) != true)) {
                    this.RetentionSettingsField = value;
                    this.RaisePropertyChanged("RetentionSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerDescription {
            get {
                return this.ServerDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerDescriptionField, value) != true)) {
                    this.ServerDescriptionField = value;
                    this.RaisePropertyChanged("ServerDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ServerId {
            get {
                return this.ServerIdField;
            }
            set {
                if ((this.ServerIdField.Equals(value) != true)) {
                    this.ServerIdField = value;
                    this.RaisePropertyChanged("ServerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerName {
            get {
                return this.ServerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerNameField, value) != true)) {
                    this.ServerNameField = value;
                    this.RaisePropertyChanged("ServerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.ServerOption[] ServerOptions {
            get {
                return this.ServerOptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerOptionsField, value) != true)) {
                    this.ServerOptionsField = value;
                    this.RaisePropertyChanged("ServerOptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.SpeakerGroupInfo[] SpeakerGroups {
            get {
                return this.SpeakerGroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.SpeakerGroupsField, value) != true)) {
                    this.SpeakerGroupsField = value;
                    this.RaisePropertyChanged("SpeakerGroups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.SystemEventTypeInfo[] SystemEventTypes {
            get {
                return this.SystemEventTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemEventTypesField, value) != true)) {
                    this.SystemEventTypesField = value;
                    this.RaisePropertyChanged("SystemEventTypes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApplicationSecurityInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class ApplicationSecurityInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.SmartClientSecurityInfo SmartClientSecurityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.SmartClientSecurityInfo SmartClientSecurity {
            get {
                return this.SmartClientSecurityField;
            }
            set {
                if ((object.ReferenceEquals(this.SmartClientSecurityField, value) != true)) {
                    this.SmartClientSecurityField = value;
                    this.RaisePropertyChanged("SmartClientSecurity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookmarkSettingInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class BookmarkSettingInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefaultPostTimeSecField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefaultPreTimeSecField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefaultPostTimeSec {
            get {
                return this.DefaultPostTimeSecField;
            }
            set {
                if ((this.DefaultPostTimeSecField.Equals(value) != true)) {
                    this.DefaultPostTimeSecField = value;
                    this.RaisePropertyChanged("DefaultPostTimeSec");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefaultPreTimeSec {
            get {
                return this.DefaultPreTimeSecField;
            }
            set {
                if ((this.DefaultPreTimeSecField.Equals(value) != true)) {
                    this.DefaultPreTimeSecField = value;
                    this.RaisePropertyChanged("DefaultPreTimeSec");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RetentionSettingInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class RetentionSettingInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.RetentionOption[] RetentionOptionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.RetentionOption[] RetentionOptions {
            get {
                return this.RetentionOptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.RetentionOptionsField, value) != true)) {
                    this.RetentionOptionsField = value;
                    this.RaisePropertyChanged("RetentionOptions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlertTypeGroupInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class AlertTypeGroupInfo : ConfigApiSharp.ServerCommandService.GroupInfo {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.AlertTypeGroupInfo[] AlertTypeGroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid[] AlertTypesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.AlertTypeGroupInfo[] AlertTypeGroups {
            get {
                return this.AlertTypeGroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.AlertTypeGroupsField, value) != true)) {
                    this.AlertTypeGroupsField = value;
                    this.RaisePropertyChanged("AlertTypeGroups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid[] AlertTypes {
            get {
                return this.AlertTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.AlertTypesField, value) != true)) {
                    this.AlertTypesField = value;
                    this.RaisePropertyChanged("AlertTypes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlertTypeInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class AlertTypeInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid AlertTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AlertTypeId {
            get {
                return this.AlertTypeIdField;
            }
            set {
                if ((this.AlertTypeIdField.Equals(value) != true)) {
                    this.AlertTypeIdField = value;
                    this.RaisePropertyChanged("AlertTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AudioMessageInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class AudioMessageInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CameraGroupInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class CameraGroupInfo : ConfigApiSharp.ServerCommandService.GroupInfo {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.CameraGroupInfo[] CameraGroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid[] CamerasField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.CameraGroupInfo[] CameraGroups {
            get {
                return this.CameraGroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.CameraGroupsField, value) != true)) {
                    this.CameraGroupsField = value;
                    this.RaisePropertyChanged("CameraGroups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid[] Cameras {
            get {
                return this.CamerasField;
            }
            set {
                if ((object.ReferenceEquals(this.CamerasField, value) != true)) {
                    this.CamerasField = value;
                    this.RaisePropertyChanged("Cameras");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceMappingInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class DeviceMappingInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DeviceAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DeviceBField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DeviceA {
            get {
                return this.DeviceAField;
            }
            set {
                if ((this.DeviceAField.Equals(value) != true)) {
                    this.DeviceAField = value;
                    this.RaisePropertyChanged("DeviceA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DeviceB {
            get {
                return this.DeviceBField;
            }
            set {
                if ((this.DeviceBField.Equals(value) != true)) {
                    this.DeviceBField = value;
                    this.RaisePropertyChanged("DeviceB");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventTypeGroupInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class EventTypeGroupInfo : ConfigApiSharp.ServerCommandService.GroupInfo {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.EventTypeGroupInfo[] EventTypeGroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid[] EventTypesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.EventTypeGroupInfo[] EventTypeGroups {
            get {
                return this.EventTypeGroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.EventTypeGroupsField, value) != true)) {
                    this.EventTypeGroupsField = value;
                    this.RaisePropertyChanged("EventTypeGroups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid[] EventTypes {
            get {
                return this.EventTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.EventTypesField, value) != true)) {
                    this.EventTypesField = value;
                    this.RaisePropertyChanged("EventTypes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventTypeInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class EventTypeInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid EventTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid EventTypeId {
            get {
                return this.EventTypeIdField;
            }
            set {
                if ((this.EventTypeIdField.Equals(value) != true)) {
                    this.EventTypeIdField = value;
                    this.RaisePropertyChanged("EventTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InputGroupInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class InputGroupInfo : ConfigApiSharp.ServerCommandService.GroupInfo {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.InputGroupInfo[] InputGroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid[] InputsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.InputGroupInfo[] InputGroups {
            get {
                return this.InputGroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.InputGroupsField, value) != true)) {
                    this.InputGroupsField = value;
                    this.RaisePropertyChanged("InputGroups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid[] Inputs {
            get {
                return this.InputsField;
            }
            set {
                if ((object.ReferenceEquals(this.InputsField, value) != true)) {
                    this.InputsField = value;
                    this.RaisePropertyChanged("Inputs");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LicenseInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class LicenseInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LicenseIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LicenseId {
            get {
                return this.LicenseIdField;
            }
            set {
                if ((this.LicenseIdField.Equals(value) != true)) {
                    this.LicenseIdField = value;
                    this.RaisePropertyChanged("LicenseId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MatrixMonitorInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class MatrixMonitorInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid MatrixMonitorIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid MatrixMonitorId {
            get {
                return this.MatrixMonitorIdField;
            }
            set {
                if ((this.MatrixMonitorIdField.Equals(value) != true)) {
                    this.MatrixMonitorIdField = value;
                    this.RaisePropertyChanged("MatrixMonitorId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MetadataDeviceGroupInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class MetadataDeviceGroupInfo : ConfigApiSharp.ServerCommandService.GroupInfo {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.MetadataDeviceGroupInfo[] MetadataDeviceGroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid[] MetadataDevicesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.MetadataDeviceGroupInfo[] MetadataDeviceGroups {
            get {
                return this.MetadataDeviceGroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.MetadataDeviceGroupsField, value) != true)) {
                    this.MetadataDeviceGroupsField = value;
                    this.RaisePropertyChanged("MetadataDeviceGroups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid[] MetadataDevices {
            get {
                return this.MetadataDevicesField;
            }
            set {
                if ((object.ReferenceEquals(this.MetadataDevicesField, value) != true)) {
                    this.MetadataDevicesField = value;
                    this.RaisePropertyChanged("MetadataDevices");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MicrophoneGroupInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class MicrophoneGroupInfo : ConfigApiSharp.ServerCommandService.GroupInfo {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.MicrophoneGroupInfo[] MicrophoneGroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid[] MicrophonesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.MicrophoneGroupInfo[] MicrophoneGroups {
            get {
                return this.MicrophoneGroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.MicrophoneGroupsField, value) != true)) {
                    this.MicrophoneGroupsField = value;
                    this.RaisePropertyChanged("MicrophoneGroups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid[] Microphones {
            get {
                return this.MicrophonesField;
            }
            set {
                if ((object.ReferenceEquals(this.MicrophonesField, value) != true)) {
                    this.MicrophonesField = value;
                    this.RaisePropertyChanged("Microphones");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OutputGroupInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class OutputGroupInfo : ConfigApiSharp.ServerCommandService.GroupInfo {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.OutputGroupInfo[] OutputGroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid[] OutputsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.OutputGroupInfo[] OutputGroups {
            get {
                return this.OutputGroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.OutputGroupsField, value) != true)) {
                    this.OutputGroupsField = value;
                    this.RaisePropertyChanged("OutputGroups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid[] Outputs {
            get {
                return this.OutputsField;
            }
            set {
                if ((object.ReferenceEquals(this.OutputsField, value) != true)) {
                    this.OutputsField = value;
                    this.RaisePropertyChanged("Outputs");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecorderInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class RecorderInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.CameraInfo[] CamerasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefaultRecordingTimeSecondsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.HardwareInfo[] HardwareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.InputInfo[] InputsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.MetadataDeviceInfo[] MetadataDevicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.MicrophoneInfo[] MicrophonesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.OutputInfo[] OutputsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RecorderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ServiceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.SpeakerInfo[] SpeakersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeZoneNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebServerUriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XmlEncodingField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.CameraInfo[] Cameras {
            get {
                return this.CamerasField;
            }
            set {
                if ((object.ReferenceEquals(this.CamerasField, value) != true)) {
                    this.CamerasField = value;
                    this.RaisePropertyChanged("Cameras");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefaultRecordingTimeSeconds {
            get {
                return this.DefaultRecordingTimeSecondsField;
            }
            set {
                if ((this.DefaultRecordingTimeSecondsField.Equals(value) != true)) {
                    this.DefaultRecordingTimeSecondsField = value;
                    this.RaisePropertyChanged("DefaultRecordingTimeSeconds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.HardwareInfo[] Hardware {
            get {
                return this.HardwareField;
            }
            set {
                if ((object.ReferenceEquals(this.HardwareField, value) != true)) {
                    this.HardwareField = value;
                    this.RaisePropertyChanged("Hardware");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostName {
            get {
                return this.HostNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HostNameField, value) != true)) {
                    this.HostNameField = value;
                    this.RaisePropertyChanged("HostName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.InputInfo[] Inputs {
            get {
                return this.InputsField;
            }
            set {
                if ((object.ReferenceEquals(this.InputsField, value) != true)) {
                    this.InputsField = value;
                    this.RaisePropertyChanged("Inputs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.MetadataDeviceInfo[] MetadataDevices {
            get {
                return this.MetadataDevicesField;
            }
            set {
                if ((object.ReferenceEquals(this.MetadataDevicesField, value) != true)) {
                    this.MetadataDevicesField = value;
                    this.RaisePropertyChanged("MetadataDevices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.MicrophoneInfo[] Microphones {
            get {
                return this.MicrophonesField;
            }
            set {
                if ((object.ReferenceEquals(this.MicrophonesField, value) != true)) {
                    this.MicrophonesField = value;
                    this.RaisePropertyChanged("Microphones");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.OutputInfo[] Outputs {
            get {
                return this.OutputsField;
            }
            set {
                if ((object.ReferenceEquals(this.OutputsField, value) != true)) {
                    this.OutputsField = value;
                    this.RaisePropertyChanged("Outputs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RecorderId {
            get {
                return this.RecorderIdField;
            }
            set {
                if ((this.RecorderIdField.Equals(value) != true)) {
                    this.RecorderIdField = value;
                    this.RaisePropertyChanged("RecorderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ServiceId {
            get {
                return this.ServiceIdField;
            }
            set {
                if ((this.ServiceIdField.Equals(value) != true)) {
                    this.ServiceIdField = value;
                    this.RaisePropertyChanged("ServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.SpeakerInfo[] Speakers {
            get {
                return this.SpeakersField;
            }
            set {
                if ((object.ReferenceEquals(this.SpeakersField, value) != true)) {
                    this.SpeakersField = value;
                    this.RaisePropertyChanged("Speakers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeZoneName {
            get {
                return this.TimeZoneNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeZoneNameField, value) != true)) {
                    this.TimeZoneNameField = value;
                    this.RaisePropertyChanged("TimeZoneName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WebServerUri {
            get {
                return this.WebServerUriField;
            }
            set {
                if ((object.ReferenceEquals(this.WebServerUriField, value) != true)) {
                    this.WebServerUriField = value;
                    this.RaisePropertyChanged("WebServerUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XmlEncoding {
            get {
                return this.XmlEncodingField;
            }
            set {
                if ((object.ReferenceEquals(this.XmlEncodingField, value) != true)) {
                    this.XmlEncodingField = value;
                    this.RaisePropertyChanged("XmlEncoding");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServerOption", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class ServerOption : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpeakerGroupInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class SpeakerGroupInfo : ConfigApiSharp.ServerCommandService.GroupInfo {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.SpeakerGroupInfo[] SpeakerGroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid[] SpeakersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.SpeakerGroupInfo[] SpeakerGroups {
            get {
                return this.SpeakerGroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.SpeakerGroupsField, value) != true)) {
                    this.SpeakerGroupsField = value;
                    this.RaisePropertyChanged("SpeakerGroups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid[] Speakers {
            get {
                return this.SpeakersField;
            }
            set {
                if ((object.ReferenceEquals(this.SpeakersField, value) != true)) {
                    this.SpeakersField = value;
                    this.RaisePropertyChanged("Speakers");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SystemEventTypeInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class SystemEventTypeInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.EventSource EventSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid EventTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.EventSource EventSource {
            get {
                return this.EventSourceField;
            }
            set {
                if ((this.EventSourceField.Equals(value) != true)) {
                    this.EventSourceField = value;
                    this.RaisePropertyChanged("EventSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid EventTypeId {
            get {
                return this.EventTypeIdField;
            }
            set {
                if ((this.EventTypeIdField.Equals(value) != true)) {
                    this.EventTypeIdField = value;
                    this.RaisePropertyChanged("EventTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigApiSharp.ServerCommandService.CameraGroupInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigApiSharp.ServerCommandService.EventTypeGroupInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigApiSharp.ServerCommandService.InputGroupInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigApiSharp.ServerCommandService.MetadataDeviceGroupInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigApiSharp.ServerCommandService.MicrophoneGroupInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigApiSharp.ServerCommandService.OutputGroupInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigApiSharp.ServerCommandService.SpeakerGroupInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigApiSharp.ServerCommandService.AlertTypeGroupInfo))]
    public partial class GroupInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid GroupId {
            get {
                return this.GroupIdField;
            }
            set {
                if ((this.GroupIdField.Equals(value) != true)) {
                    this.GroupIdField = value;
                    this.RaisePropertyChanged("GroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SmartClientSecurityInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class SmartClientSecurityInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SmartClientBrowseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SmartClientLiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SmartClientReportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SmartClientSetupField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SmartClientBrowse {
            get {
                return this.SmartClientBrowseField;
            }
            set {
                if ((this.SmartClientBrowseField.Equals(value) != true)) {
                    this.SmartClientBrowseField = value;
                    this.RaisePropertyChanged("SmartClientBrowse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SmartClientLive {
            get {
                return this.SmartClientLiveField;
            }
            set {
                if ((this.SmartClientLiveField.Equals(value) != true)) {
                    this.SmartClientLiveField = value;
                    this.RaisePropertyChanged("SmartClientLive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SmartClientReport {
            get {
                return this.SmartClientReportField;
            }
            set {
                if ((this.SmartClientReportField.Equals(value) != true)) {
                    this.SmartClientReportField = value;
                    this.RaisePropertyChanged("SmartClientReport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SmartClientSetup {
            get {
                return this.SmartClientSetupField;
            }
            set {
                if ((this.SmartClientSetupField.Equals(value) != true)) {
                    this.SmartClientSetupField = value;
                    this.RaisePropertyChanged("SmartClientSetup");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CameraInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class CameraInfo : ConfigApiSharp.ServerCommandService.DeviceInfo {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BrowsableStreamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.CameraSecurityInfo CameraSecurityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EdgeStoragePlaybackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EdgeStorageSupportedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.IpixInfo IpixSettingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MaxFPSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MulticastEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.PanoramicLensInfo PanoramicLensSettingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.PtzInfo PtzSettingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StopManualRecordingSecondsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.StreamInfo[] StreamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.TrackInfo[] TracksField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BrowsableStream {
            get {
                return this.BrowsableStreamField;
            }
            set {
                if ((this.BrowsableStreamField.Equals(value) != true)) {
                    this.BrowsableStreamField = value;
                    this.RaisePropertyChanged("BrowsableStream");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.CameraSecurityInfo CameraSecurity {
            get {
                return this.CameraSecurityField;
            }
            set {
                if ((object.ReferenceEquals(this.CameraSecurityField, value) != true)) {
                    this.CameraSecurityField = value;
                    this.RaisePropertyChanged("CameraSecurity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EdgeStoragePlayback {
            get {
                return this.EdgeStoragePlaybackField;
            }
            set {
                if ((this.EdgeStoragePlaybackField.Equals(value) != true)) {
                    this.EdgeStoragePlaybackField = value;
                    this.RaisePropertyChanged("EdgeStoragePlayback");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EdgeStorageSupported {
            get {
                return this.EdgeStorageSupportedField;
            }
            set {
                if ((this.EdgeStorageSupportedField.Equals(value) != true)) {
                    this.EdgeStorageSupportedField = value;
                    this.RaisePropertyChanged("EdgeStorageSupported");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.IpixInfo IpixSettings {
            get {
                return this.IpixSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.IpixSettingsField, value) != true)) {
                    this.IpixSettingsField = value;
                    this.RaisePropertyChanged("IpixSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaxFPS {
            get {
                return this.MaxFPSField;
            }
            set {
                if ((this.MaxFPSField.Equals(value) != true)) {
                    this.MaxFPSField = value;
                    this.RaisePropertyChanged("MaxFPS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MulticastEnabled {
            get {
                return this.MulticastEnabledField;
            }
            set {
                if ((this.MulticastEnabledField.Equals(value) != true)) {
                    this.MulticastEnabledField = value;
                    this.RaisePropertyChanged("MulticastEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.PanoramicLensInfo PanoramicLensSettings {
            get {
                return this.PanoramicLensSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.PanoramicLensSettingsField, value) != true)) {
                    this.PanoramicLensSettingsField = value;
                    this.RaisePropertyChanged("PanoramicLensSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.PtzInfo PtzSettings {
            get {
                return this.PtzSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.PtzSettingsField, value) != true)) {
                    this.PtzSettingsField = value;
                    this.RaisePropertyChanged("PtzSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StopManualRecordingSeconds {
            get {
                return this.StopManualRecordingSecondsField;
            }
            set {
                if ((this.StopManualRecordingSecondsField.Equals(value) != true)) {
                    this.StopManualRecordingSecondsField = value;
                    this.RaisePropertyChanged("StopManualRecordingSeconds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.StreamInfo[] Streams {
            get {
                return this.StreamsField;
            }
            set {
                if ((object.ReferenceEquals(this.StreamsField, value) != true)) {
                    this.StreamsField = value;
                    this.RaisePropertyChanged("Streams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.TrackInfo[] Tracks {
            get {
                return this.TracksField;
            }
            set {
                if ((object.ReferenceEquals(this.TracksField, value) != true)) {
                    this.TracksField = value;
                    this.RaisePropertyChanged("Tracks");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HardwareInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class HardwareInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid[] DeviceIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid HardwareIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InterconnectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RecorderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UriField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid[] DeviceIds {
            get {
                return this.DeviceIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceIdsField, value) != true)) {
                    this.DeviceIdsField = value;
                    this.RaisePropertyChanged("DeviceIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid HardwareId {
            get {
                return this.HardwareIdField;
            }
            set {
                if ((this.HardwareIdField.Equals(value) != true)) {
                    this.HardwareIdField = value;
                    this.RaisePropertyChanged("HardwareId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Interconnected {
            get {
                return this.InterconnectedField;
            }
            set {
                if ((this.InterconnectedField.Equals(value) != true)) {
                    this.InterconnectedField = value;
                    this.RaisePropertyChanged("Interconnected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RecorderId {
            get {
                return this.RecorderIdField;
            }
            set {
                if ((this.RecorderIdField.Equals(value) != true)) {
                    this.RecorderIdField = value;
                    this.RaisePropertyChanged("RecorderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Uri {
            get {
                return this.UriField;
            }
            set {
                if ((object.ReferenceEquals(this.UriField, value) != true)) {
                    this.UriField = value;
                    this.RaisePropertyChanged("Uri");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InputInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class InputInfo : ConfigApiSharp.ServerCommandService.DeviceInfo {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.InputSecurityInfo InputSecurityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.InputSecurityInfo InputSecurity {
            get {
                return this.InputSecurityField;
            }
            set {
                if ((object.ReferenceEquals(this.InputSecurityField, value) != true)) {
                    this.InputSecurityField = value;
                    this.RaisePropertyChanged("InputSecurity");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MetadataDeviceInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class MetadataDeviceInfo : ConfigApiSharp.ServerCommandService.DeviceInfo {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EdgeStoragePlaybackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EdgeStorageSupportedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.MetadataDeviceSecurityInfo MetadataDeviceSecurityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.MetadataTypeInfo[] MetadataTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MulticastEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StopManualRecordingSecondsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.TrackInfo[] TracksField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EdgeStoragePlayback {
            get {
                return this.EdgeStoragePlaybackField;
            }
            set {
                if ((this.EdgeStoragePlaybackField.Equals(value) != true)) {
                    this.EdgeStoragePlaybackField = value;
                    this.RaisePropertyChanged("EdgeStoragePlayback");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EdgeStorageSupported {
            get {
                return this.EdgeStorageSupportedField;
            }
            set {
                if ((this.EdgeStorageSupportedField.Equals(value) != true)) {
                    this.EdgeStorageSupportedField = value;
                    this.RaisePropertyChanged("EdgeStorageSupported");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.MetadataDeviceSecurityInfo MetadataDeviceSecurity {
            get {
                return this.MetadataDeviceSecurityField;
            }
            set {
                if ((object.ReferenceEquals(this.MetadataDeviceSecurityField, value) != true)) {
                    this.MetadataDeviceSecurityField = value;
                    this.RaisePropertyChanged("MetadataDeviceSecurity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.MetadataTypeInfo[] MetadataTypes {
            get {
                return this.MetadataTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.MetadataTypesField, value) != true)) {
                    this.MetadataTypesField = value;
                    this.RaisePropertyChanged("MetadataTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MulticastEnabled {
            get {
                return this.MulticastEnabledField;
            }
            set {
                if ((this.MulticastEnabledField.Equals(value) != true)) {
                    this.MulticastEnabledField = value;
                    this.RaisePropertyChanged("MulticastEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StopManualRecordingSeconds {
            get {
                return this.StopManualRecordingSecondsField;
            }
            set {
                if ((this.StopManualRecordingSecondsField.Equals(value) != true)) {
                    this.StopManualRecordingSecondsField = value;
                    this.RaisePropertyChanged("StopManualRecordingSeconds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.TrackInfo[] Tracks {
            get {
                return this.TracksField;
            }
            set {
                if ((object.ReferenceEquals(this.TracksField, value) != true)) {
                    this.TracksField = value;
                    this.RaisePropertyChanged("Tracks");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MicrophoneInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class MicrophoneInfo : ConfigApiSharp.ServerCommandService.DeviceInfo {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EdgeStoragePlaybackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EdgeStorageSupportedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.MicrophoneSecurityInfo MicrophoneSecurityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MulticastEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StopManualRecordingSecondsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.TrackInfo[] TracksField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EdgeStoragePlayback {
            get {
                return this.EdgeStoragePlaybackField;
            }
            set {
                if ((this.EdgeStoragePlaybackField.Equals(value) != true)) {
                    this.EdgeStoragePlaybackField = value;
                    this.RaisePropertyChanged("EdgeStoragePlayback");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EdgeStorageSupported {
            get {
                return this.EdgeStorageSupportedField;
            }
            set {
                if ((this.EdgeStorageSupportedField.Equals(value) != true)) {
                    this.EdgeStorageSupportedField = value;
                    this.RaisePropertyChanged("EdgeStorageSupported");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.MicrophoneSecurityInfo MicrophoneSecurity {
            get {
                return this.MicrophoneSecurityField;
            }
            set {
                if ((object.ReferenceEquals(this.MicrophoneSecurityField, value) != true)) {
                    this.MicrophoneSecurityField = value;
                    this.RaisePropertyChanged("MicrophoneSecurity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MulticastEnabled {
            get {
                return this.MulticastEnabledField;
            }
            set {
                if ((this.MulticastEnabledField.Equals(value) != true)) {
                    this.MulticastEnabledField = value;
                    this.RaisePropertyChanged("MulticastEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StopManualRecordingSeconds {
            get {
                return this.StopManualRecordingSecondsField;
            }
            set {
                if ((this.StopManualRecordingSecondsField.Equals(value) != true)) {
                    this.StopManualRecordingSecondsField = value;
                    this.RaisePropertyChanged("StopManualRecordingSeconds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.TrackInfo[] Tracks {
            get {
                return this.TracksField;
            }
            set {
                if ((object.ReferenceEquals(this.TracksField, value) != true)) {
                    this.TracksField = value;
                    this.RaisePropertyChanged("Tracks");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OutputInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class OutputInfo : ConfigApiSharp.ServerCommandService.DeviceInfo {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.OutputSecurityInfo OutputSecurityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.OutputSecurityInfo OutputSecurity {
            get {
                return this.OutputSecurityField;
            }
            set {
                if ((object.ReferenceEquals(this.OutputSecurityField, value) != true)) {
                    this.OutputSecurityField = value;
                    this.RaisePropertyChanged("OutputSecurity");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpeakerInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class SpeakerInfo : ConfigApiSharp.ServerCommandService.DeviceInfo {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EdgeStoragePlaybackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EdgeStorageSupportedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MulticastEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.SpeakerSecurityInfo SpeakerSecurityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StopManualRecordingSecondsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.TrackInfo[] TracksField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EdgeStoragePlayback {
            get {
                return this.EdgeStoragePlaybackField;
            }
            set {
                if ((this.EdgeStoragePlaybackField.Equals(value) != true)) {
                    this.EdgeStoragePlaybackField = value;
                    this.RaisePropertyChanged("EdgeStoragePlayback");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EdgeStorageSupported {
            get {
                return this.EdgeStorageSupportedField;
            }
            set {
                if ((this.EdgeStorageSupportedField.Equals(value) != true)) {
                    this.EdgeStorageSupportedField = value;
                    this.RaisePropertyChanged("EdgeStorageSupported");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MulticastEnabled {
            get {
                return this.MulticastEnabledField;
            }
            set {
                if ((this.MulticastEnabledField.Equals(value) != true)) {
                    this.MulticastEnabledField = value;
                    this.RaisePropertyChanged("MulticastEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.SpeakerSecurityInfo SpeakerSecurity {
            get {
                return this.SpeakerSecurityField;
            }
            set {
                if ((object.ReferenceEquals(this.SpeakerSecurityField, value) != true)) {
                    this.SpeakerSecurityField = value;
                    this.RaisePropertyChanged("SpeakerSecurity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StopManualRecordingSeconds {
            get {
                return this.StopManualRecordingSecondsField;
            }
            set {
                if ((this.StopManualRecordingSecondsField.Equals(value) != true)) {
                    this.StopManualRecordingSecondsField = value;
                    this.RaisePropertyChanged("StopManualRecordingSeconds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.TrackInfo[] Tracks {
            get {
                return this.TracksField;
            }
            set {
                if ((object.ReferenceEquals(this.TracksField, value) != true)) {
                    this.TracksField = value;
                    this.RaisePropertyChanged("Tracks");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigApiSharp.ServerCommandService.InputInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigApiSharp.ServerCommandService.MetadataDeviceInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigApiSharp.ServerCommandService.MicrophoneInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigApiSharp.ServerCommandService.OutputInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigApiSharp.ServerCommandService.SpeakerInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigApiSharp.ServerCommandService.CameraInfo))]
    public partial class DeviceInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CoverageDepthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CoverageDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CoverageFieldOfViewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DeviceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeviceIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GisPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid HardwareIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RecorderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortcutField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CoverageDepth {
            get {
                return this.CoverageDepthField;
            }
            set {
                if ((this.CoverageDepthField.Equals(value) != true)) {
                    this.CoverageDepthField = value;
                    this.RaisePropertyChanged("CoverageDepth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CoverageDirection {
            get {
                return this.CoverageDirectionField;
            }
            set {
                if ((this.CoverageDirectionField.Equals(value) != true)) {
                    this.CoverageDirectionField = value;
                    this.RaisePropertyChanged("CoverageDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CoverageFieldOfView {
            get {
                return this.CoverageFieldOfViewField;
            }
            set {
                if ((this.CoverageFieldOfViewField.Equals(value) != true)) {
                    this.CoverageFieldOfViewField = value;
                    this.RaisePropertyChanged("CoverageFieldOfView");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DeviceId {
            get {
                return this.DeviceIdField;
            }
            set {
                if ((this.DeviceIdField.Equals(value) != true)) {
                    this.DeviceIdField = value;
                    this.RaisePropertyChanged("DeviceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeviceIndex {
            get {
                return this.DeviceIndexField;
            }
            set {
                if ((this.DeviceIndexField.Equals(value) != true)) {
                    this.DeviceIndexField = value;
                    this.RaisePropertyChanged("DeviceIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GisPoint {
            get {
                return this.GisPointField;
            }
            set {
                if ((object.ReferenceEquals(this.GisPointField, value) != true)) {
                    this.GisPointField = value;
                    this.RaisePropertyChanged("GisPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid HardwareId {
            get {
                return this.HardwareIdField;
            }
            set {
                if ((this.HardwareIdField.Equals(value) != true)) {
                    this.HardwareIdField = value;
                    this.RaisePropertyChanged("HardwareId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Icon {
            get {
                return this.IconField;
            }
            set {
                if ((this.IconField.Equals(value) != true)) {
                    this.IconField = value;
                    this.RaisePropertyChanged("Icon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RecorderId {
            get {
                return this.RecorderIdField;
            }
            set {
                if ((this.RecorderIdField.Equals(value) != true)) {
                    this.RecorderIdField = value;
                    this.RaisePropertyChanged("RecorderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shortcut {
            get {
                return this.ShortcutField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortcutField, value) != true)) {
                    this.ShortcutField = value;
                    this.RaisePropertyChanged("Shortcut");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CameraSecurityInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class CameraSecurityInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BookmarkAddField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BookmarkDeleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BookmarkEditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BookmarkViewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BrowseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExportAviField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExportDatabaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExportJpegField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GetSequencesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManagePatrollingProfilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManagePresetLocksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManagePresetsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.PtzSecurityInfo PtzSecurityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RetentionCreateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RetentionRemoveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RetentionViewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RetrieveEdgeRecordingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SmartSearchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StartRecordingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StopRecordingField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BookmarkAdd {
            get {
                return this.BookmarkAddField;
            }
            set {
                if ((this.BookmarkAddField.Equals(value) != true)) {
                    this.BookmarkAddField = value;
                    this.RaisePropertyChanged("BookmarkAdd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BookmarkDelete {
            get {
                return this.BookmarkDeleteField;
            }
            set {
                if ((this.BookmarkDeleteField.Equals(value) != true)) {
                    this.BookmarkDeleteField = value;
                    this.RaisePropertyChanged("BookmarkDelete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BookmarkEdit {
            get {
                return this.BookmarkEditField;
            }
            set {
                if ((this.BookmarkEditField.Equals(value) != true)) {
                    this.BookmarkEditField = value;
                    this.RaisePropertyChanged("BookmarkEdit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BookmarkView {
            get {
                return this.BookmarkViewField;
            }
            set {
                if ((this.BookmarkViewField.Equals(value) != true)) {
                    this.BookmarkViewField = value;
                    this.RaisePropertyChanged("BookmarkView");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Browse {
            get {
                return this.BrowseField;
            }
            set {
                if ((this.BrowseField.Equals(value) != true)) {
                    this.BrowseField = value;
                    this.RaisePropertyChanged("Browse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExportAvi {
            get {
                return this.ExportAviField;
            }
            set {
                if ((this.ExportAviField.Equals(value) != true)) {
                    this.ExportAviField = value;
                    this.RaisePropertyChanged("ExportAvi");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExportDatabase {
            get {
                return this.ExportDatabaseField;
            }
            set {
                if ((this.ExportDatabaseField.Equals(value) != true)) {
                    this.ExportDatabaseField = value;
                    this.RaisePropertyChanged("ExportDatabase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExportJpeg {
            get {
                return this.ExportJpegField;
            }
            set {
                if ((this.ExportJpegField.Equals(value) != true)) {
                    this.ExportJpegField = value;
                    this.RaisePropertyChanged("ExportJpeg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GetSequences {
            get {
                return this.GetSequencesField;
            }
            set {
                if ((this.GetSequencesField.Equals(value) != true)) {
                    this.GetSequencesField = value;
                    this.RaisePropertyChanged("GetSequences");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Live {
            get {
                return this.LiveField;
            }
            set {
                if ((this.LiveField.Equals(value) != true)) {
                    this.LiveField = value;
                    this.RaisePropertyChanged("Live");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ManagePatrollingProfiles {
            get {
                return this.ManagePatrollingProfilesField;
            }
            set {
                if ((this.ManagePatrollingProfilesField.Equals(value) != true)) {
                    this.ManagePatrollingProfilesField = value;
                    this.RaisePropertyChanged("ManagePatrollingProfiles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ManagePresetLocks {
            get {
                return this.ManagePresetLocksField;
            }
            set {
                if ((this.ManagePresetLocksField.Equals(value) != true)) {
                    this.ManagePresetLocksField = value;
                    this.RaisePropertyChanged("ManagePresetLocks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ManagePresets {
            get {
                return this.ManagePresetsField;
            }
            set {
                if ((this.ManagePresetsField.Equals(value) != true)) {
                    this.ManagePresetsField = value;
                    this.RaisePropertyChanged("ManagePresets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.PtzSecurityInfo PtzSecurity {
            get {
                return this.PtzSecurityField;
            }
            set {
                if ((object.ReferenceEquals(this.PtzSecurityField, value) != true)) {
                    this.PtzSecurityField = value;
                    this.RaisePropertyChanged("PtzSecurity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RetentionCreate {
            get {
                return this.RetentionCreateField;
            }
            set {
                if ((this.RetentionCreateField.Equals(value) != true)) {
                    this.RetentionCreateField = value;
                    this.RaisePropertyChanged("RetentionCreate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RetentionRemove {
            get {
                return this.RetentionRemoveField;
            }
            set {
                if ((this.RetentionRemoveField.Equals(value) != true)) {
                    this.RetentionRemoveField = value;
                    this.RaisePropertyChanged("RetentionRemove");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RetentionView {
            get {
                return this.RetentionViewField;
            }
            set {
                if ((this.RetentionViewField.Equals(value) != true)) {
                    this.RetentionViewField = value;
                    this.RaisePropertyChanged("RetentionView");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RetrieveEdgeRecordings {
            get {
                return this.RetrieveEdgeRecordingsField;
            }
            set {
                if ((this.RetrieveEdgeRecordingsField.Equals(value) != true)) {
                    this.RetrieveEdgeRecordingsField = value;
                    this.RaisePropertyChanged("RetrieveEdgeRecordings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SmartSearch {
            get {
                return this.SmartSearchField;
            }
            set {
                if ((this.SmartSearchField.Equals(value) != true)) {
                    this.SmartSearchField = value;
                    this.RaisePropertyChanged("SmartSearch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StartRecording {
            get {
                return this.StartRecordingField;
            }
            set {
                if ((this.StartRecordingField.Equals(value) != true)) {
                    this.StartRecordingField = value;
                    this.RaisePropertyChanged("StartRecording");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StopRecording {
            get {
                return this.StopRecordingField;
            }
            set {
                if ((this.StopRecordingField.Equals(value) != true)) {
                    this.StopRecordingField = value;
                    this.RaisePropertyChanged("StopRecording");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IpixInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class IpixInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CeilingMountedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.HemisphereInfo HemisphereField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.PositionInfo HomepositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IpixEnabledField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CeilingMounted {
            get {
                return this.CeilingMountedField;
            }
            set {
                if ((this.CeilingMountedField.Equals(value) != true)) {
                    this.CeilingMountedField = value;
                    this.RaisePropertyChanged("CeilingMounted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.HemisphereInfo Hemisphere {
            get {
                return this.HemisphereField;
            }
            set {
                if ((object.ReferenceEquals(this.HemisphereField, value) != true)) {
                    this.HemisphereField = value;
                    this.RaisePropertyChanged("Hemisphere");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.PositionInfo Homeposition {
            get {
                return this.HomepositionField;
            }
            set {
                if ((object.ReferenceEquals(this.HomepositionField, value) != true)) {
                    this.HomepositionField = value;
                    this.RaisePropertyChanged("Homeposition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IpixEnabled {
            get {
                return this.IpixEnabledField;
            }
            set {
                if ((this.IpixEnabledField.Equals(value) != true)) {
                    this.IpixEnabledField = value;
                    this.RaisePropertyChanged("IpixEnabled");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PanoramicLensInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class PanoramicLensInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CameraMountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.ImmerVisionInfo ImmerVisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PanoramicLensEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PanoramicLensTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CameraMount {
            get {
                return this.CameraMountField;
            }
            set {
                if ((object.ReferenceEquals(this.CameraMountField, value) != true)) {
                    this.CameraMountField = value;
                    this.RaisePropertyChanged("CameraMount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.ImmerVisionInfo ImmerVision {
            get {
                return this.ImmerVisionField;
            }
            set {
                if ((object.ReferenceEquals(this.ImmerVisionField, value) != true)) {
                    this.ImmerVisionField = value;
                    this.RaisePropertyChanged("ImmerVision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PanoramicLensEnabled {
            get {
                return this.PanoramicLensEnabledField;
            }
            set {
                if ((this.PanoramicLensEnabledField.Equals(value) != true)) {
                    this.PanoramicLensEnabledField = value;
                    this.RaisePropertyChanged("PanoramicLensEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PanoramicLensType {
            get {
                return this.PanoramicLensTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PanoramicLensTypeField, value) != true)) {
                    this.PanoramicLensTypeField = value;
                    this.RaisePropertyChanged("PanoramicLensType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PtzInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class PtzInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.CapabilityInfo[] CapabilitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EditPresetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCenterOnPositionInViewSupportedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPtzCenterAndZoomToRectangleSupportedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPtzDiagonalSupportedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPtzHomeSupportedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.PresetInfo[] PresetsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PtzEnabledField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.CapabilityInfo[] Capabilities {
            get {
                return this.CapabilitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.CapabilitiesField, value) != true)) {
                    this.CapabilitiesField = value;
                    this.RaisePropertyChanged("Capabilities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EditPreset {
            get {
                return this.EditPresetField;
            }
            set {
                if ((this.EditPresetField.Equals(value) != true)) {
                    this.EditPresetField = value;
                    this.RaisePropertyChanged("EditPreset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCenterOnPositionInViewSupported {
            get {
                return this.IsCenterOnPositionInViewSupportedField;
            }
            set {
                if ((this.IsCenterOnPositionInViewSupportedField.Equals(value) != true)) {
                    this.IsCenterOnPositionInViewSupportedField = value;
                    this.RaisePropertyChanged("IsCenterOnPositionInViewSupported");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPtzCenterAndZoomToRectangleSupported {
            get {
                return this.IsPtzCenterAndZoomToRectangleSupportedField;
            }
            set {
                if ((this.IsPtzCenterAndZoomToRectangleSupportedField.Equals(value) != true)) {
                    this.IsPtzCenterAndZoomToRectangleSupportedField = value;
                    this.RaisePropertyChanged("IsPtzCenterAndZoomToRectangleSupported");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPtzDiagonalSupported {
            get {
                return this.IsPtzDiagonalSupportedField;
            }
            set {
                if ((this.IsPtzDiagonalSupportedField.Equals(value) != true)) {
                    this.IsPtzDiagonalSupportedField = value;
                    this.RaisePropertyChanged("IsPtzDiagonalSupported");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPtzHomeSupported {
            get {
                return this.IsPtzHomeSupportedField;
            }
            set {
                if ((this.IsPtzHomeSupportedField.Equals(value) != true)) {
                    this.IsPtzHomeSupportedField = value;
                    this.RaisePropertyChanged("IsPtzHomeSupported");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.PresetInfo[] Presets {
            get {
                return this.PresetsField;
            }
            set {
                if ((object.ReferenceEquals(this.PresetsField, value) != true)) {
                    this.PresetsField = value;
                    this.RaisePropertyChanged("Presets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PtzEnabled {
            get {
                return this.PtzEnabledField;
            }
            set {
                if ((this.PtzEnabledField.Equals(value) != true)) {
                    this.PtzEnabledField = value;
                    this.RaisePropertyChanged("PtzEnabled");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StreamInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class StreamInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid StreamIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Default {
            get {
                return this.DefaultField;
            }
            set {
                if ((this.DefaultField.Equals(value) != true)) {
                    this.DefaultField = value;
                    this.RaisePropertyChanged("Default");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid StreamId {
            get {
                return this.StreamIdField;
            }
            set {
                if ((this.StreamIdField.Equals(value) != true)) {
                    this.StreamIdField = value;
                    this.RaisePropertyChanged("StreamId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrackInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class TrackInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EdgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid TrackIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Edge {
            get {
                return this.EdgeField;
            }
            set {
                if ((this.EdgeField.Equals(value) != true)) {
                    this.EdgeField = value;
                    this.RaisePropertyChanged("Edge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid TrackId {
            get {
                return this.TrackIdField;
            }
            set {
                if ((this.TrackIdField.Equals(value) != true)) {
                    this.TrackIdField = value;
                    this.RaisePropertyChanged("TrackId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InputSecurityInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class InputSecurityInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReadInputField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReadInput {
            get {
                return this.ReadInputField;
            }
            set {
                if ((this.ReadInputField.Equals(value) != true)) {
                    this.ReadInputField = value;
                    this.RaisePropertyChanged("ReadInput");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MetadataDeviceSecurityInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class MetadataDeviceSecurityInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BrowseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExportDatabaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GetSequencesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RetentionCreateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RetentionRemoveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RetentionViewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RetrieveEdgeRecordingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StartRecordingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StopRecordingField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Browse {
            get {
                return this.BrowseField;
            }
            set {
                if ((this.BrowseField.Equals(value) != true)) {
                    this.BrowseField = value;
                    this.RaisePropertyChanged("Browse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExportDatabase {
            get {
                return this.ExportDatabaseField;
            }
            set {
                if ((this.ExportDatabaseField.Equals(value) != true)) {
                    this.ExportDatabaseField = value;
                    this.RaisePropertyChanged("ExportDatabase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GetSequences {
            get {
                return this.GetSequencesField;
            }
            set {
                if ((this.GetSequencesField.Equals(value) != true)) {
                    this.GetSequencesField = value;
                    this.RaisePropertyChanged("GetSequences");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Live {
            get {
                return this.LiveField;
            }
            set {
                if ((this.LiveField.Equals(value) != true)) {
                    this.LiveField = value;
                    this.RaisePropertyChanged("Live");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RetentionCreate {
            get {
                return this.RetentionCreateField;
            }
            set {
                if ((this.RetentionCreateField.Equals(value) != true)) {
                    this.RetentionCreateField = value;
                    this.RaisePropertyChanged("RetentionCreate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RetentionRemove {
            get {
                return this.RetentionRemoveField;
            }
            set {
                if ((this.RetentionRemoveField.Equals(value) != true)) {
                    this.RetentionRemoveField = value;
                    this.RaisePropertyChanged("RetentionRemove");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RetentionView {
            get {
                return this.RetentionViewField;
            }
            set {
                if ((this.RetentionViewField.Equals(value) != true)) {
                    this.RetentionViewField = value;
                    this.RaisePropertyChanged("RetentionView");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RetrieveEdgeRecordings {
            get {
                return this.RetrieveEdgeRecordingsField;
            }
            set {
                if ((this.RetrieveEdgeRecordingsField.Equals(value) != true)) {
                    this.RetrieveEdgeRecordingsField = value;
                    this.RaisePropertyChanged("RetrieveEdgeRecordings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StartRecording {
            get {
                return this.StartRecordingField;
            }
            set {
                if ((this.StartRecordingField.Equals(value) != true)) {
                    this.StartRecordingField = value;
                    this.RaisePropertyChanged("StartRecording");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StopRecording {
            get {
                return this.StopRecordingField;
            }
            set {
                if ((this.StopRecordingField.Equals(value) != true)) {
                    this.StopRecordingField = value;
                    this.RaisePropertyChanged("StopRecording");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MetadataTypeInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class MetadataTypeInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DisplayIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ValidTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DisplayId {
            get {
                return this.DisplayIdField;
            }
            set {
                if ((this.DisplayIdField.Equals(value) != true)) {
                    this.DisplayIdField = value;
                    this.RaisePropertyChanged("DisplayId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ValidTime {
            get {
                return this.ValidTimeField;
            }
            set {
                if ((this.ValidTimeField.Equals(value) != true)) {
                    this.ValidTimeField = value;
                    this.RaisePropertyChanged("ValidTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MicrophoneSecurityInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class MicrophoneSecurityInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BookmarkAddField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BookmarkDeleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BookmarkEditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BookmarkViewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BrowseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExportDatabaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GetSequencesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RetentionCreateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RetentionRemoveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RetentionViewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RetrieveEdgeRecordingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StartRecordingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StopRecordingField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BookmarkAdd {
            get {
                return this.BookmarkAddField;
            }
            set {
                if ((this.BookmarkAddField.Equals(value) != true)) {
                    this.BookmarkAddField = value;
                    this.RaisePropertyChanged("BookmarkAdd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BookmarkDelete {
            get {
                return this.BookmarkDeleteField;
            }
            set {
                if ((this.BookmarkDeleteField.Equals(value) != true)) {
                    this.BookmarkDeleteField = value;
                    this.RaisePropertyChanged("BookmarkDelete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BookmarkEdit {
            get {
                return this.BookmarkEditField;
            }
            set {
                if ((this.BookmarkEditField.Equals(value) != true)) {
                    this.BookmarkEditField = value;
                    this.RaisePropertyChanged("BookmarkEdit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BookmarkView {
            get {
                return this.BookmarkViewField;
            }
            set {
                if ((this.BookmarkViewField.Equals(value) != true)) {
                    this.BookmarkViewField = value;
                    this.RaisePropertyChanged("BookmarkView");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Browse {
            get {
                return this.BrowseField;
            }
            set {
                if ((this.BrowseField.Equals(value) != true)) {
                    this.BrowseField = value;
                    this.RaisePropertyChanged("Browse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExportDatabase {
            get {
                return this.ExportDatabaseField;
            }
            set {
                if ((this.ExportDatabaseField.Equals(value) != true)) {
                    this.ExportDatabaseField = value;
                    this.RaisePropertyChanged("ExportDatabase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GetSequences {
            get {
                return this.GetSequencesField;
            }
            set {
                if ((this.GetSequencesField.Equals(value) != true)) {
                    this.GetSequencesField = value;
                    this.RaisePropertyChanged("GetSequences");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Live {
            get {
                return this.LiveField;
            }
            set {
                if ((this.LiveField.Equals(value) != true)) {
                    this.LiveField = value;
                    this.RaisePropertyChanged("Live");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RetentionCreate {
            get {
                return this.RetentionCreateField;
            }
            set {
                if ((this.RetentionCreateField.Equals(value) != true)) {
                    this.RetentionCreateField = value;
                    this.RaisePropertyChanged("RetentionCreate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RetentionRemove {
            get {
                return this.RetentionRemoveField;
            }
            set {
                if ((this.RetentionRemoveField.Equals(value) != true)) {
                    this.RetentionRemoveField = value;
                    this.RaisePropertyChanged("RetentionRemove");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RetentionView {
            get {
                return this.RetentionViewField;
            }
            set {
                if ((this.RetentionViewField.Equals(value) != true)) {
                    this.RetentionViewField = value;
                    this.RaisePropertyChanged("RetentionView");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RetrieveEdgeRecordings {
            get {
                return this.RetrieveEdgeRecordingsField;
            }
            set {
                if ((this.RetrieveEdgeRecordingsField.Equals(value) != true)) {
                    this.RetrieveEdgeRecordingsField = value;
                    this.RaisePropertyChanged("RetrieveEdgeRecordings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StartRecording {
            get {
                return this.StartRecordingField;
            }
            set {
                if ((this.StartRecordingField.Equals(value) != true)) {
                    this.StartRecordingField = value;
                    this.RaisePropertyChanged("StartRecording");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StopRecording {
            get {
                return this.StopRecordingField;
            }
            set {
                if ((this.StopRecordingField.Equals(value) != true)) {
                    this.StopRecordingField = value;
                    this.RaisePropertyChanged("StopRecording");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OutputSecurityInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class OutputSecurityInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActivateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Activate {
            get {
                return this.ActivateField;
            }
            set {
                if ((this.ActivateField.Equals(value) != true)) {
                    this.ActivateField = value;
                    this.RaisePropertyChanged("Activate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpeakerSecurityInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class SpeakerSecurityInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BookmarkAddField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BookmarkDeleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BookmarkEditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BookmarkViewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BrowseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExportDatabaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GetSequencesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RetentionCreateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RetentionRemoveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RetentionViewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RetrieveEdgeRecordingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SpeakField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StartRecordingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StopRecordingField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BookmarkAdd {
            get {
                return this.BookmarkAddField;
            }
            set {
                if ((this.BookmarkAddField.Equals(value) != true)) {
                    this.BookmarkAddField = value;
                    this.RaisePropertyChanged("BookmarkAdd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BookmarkDelete {
            get {
                return this.BookmarkDeleteField;
            }
            set {
                if ((this.BookmarkDeleteField.Equals(value) != true)) {
                    this.BookmarkDeleteField = value;
                    this.RaisePropertyChanged("BookmarkDelete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BookmarkEdit {
            get {
                return this.BookmarkEditField;
            }
            set {
                if ((this.BookmarkEditField.Equals(value) != true)) {
                    this.BookmarkEditField = value;
                    this.RaisePropertyChanged("BookmarkEdit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BookmarkView {
            get {
                return this.BookmarkViewField;
            }
            set {
                if ((this.BookmarkViewField.Equals(value) != true)) {
                    this.BookmarkViewField = value;
                    this.RaisePropertyChanged("BookmarkView");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Browse {
            get {
                return this.BrowseField;
            }
            set {
                if ((this.BrowseField.Equals(value) != true)) {
                    this.BrowseField = value;
                    this.RaisePropertyChanged("Browse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExportDatabase {
            get {
                return this.ExportDatabaseField;
            }
            set {
                if ((this.ExportDatabaseField.Equals(value) != true)) {
                    this.ExportDatabaseField = value;
                    this.RaisePropertyChanged("ExportDatabase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GetSequences {
            get {
                return this.GetSequencesField;
            }
            set {
                if ((this.GetSequencesField.Equals(value) != true)) {
                    this.GetSequencesField = value;
                    this.RaisePropertyChanged("GetSequences");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Live {
            get {
                return this.LiveField;
            }
            set {
                if ((this.LiveField.Equals(value) != true)) {
                    this.LiveField = value;
                    this.RaisePropertyChanged("Live");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RetentionCreate {
            get {
                return this.RetentionCreateField;
            }
            set {
                if ((this.RetentionCreateField.Equals(value) != true)) {
                    this.RetentionCreateField = value;
                    this.RaisePropertyChanged("RetentionCreate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RetentionRemove {
            get {
                return this.RetentionRemoveField;
            }
            set {
                if ((this.RetentionRemoveField.Equals(value) != true)) {
                    this.RetentionRemoveField = value;
                    this.RaisePropertyChanged("RetentionRemove");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RetentionView {
            get {
                return this.RetentionViewField;
            }
            set {
                if ((this.RetentionViewField.Equals(value) != true)) {
                    this.RetentionViewField = value;
                    this.RaisePropertyChanged("RetentionView");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RetrieveEdgeRecordings {
            get {
                return this.RetrieveEdgeRecordingsField;
            }
            set {
                if ((this.RetrieveEdgeRecordingsField.Equals(value) != true)) {
                    this.RetrieveEdgeRecordingsField = value;
                    this.RaisePropertyChanged("RetrieveEdgeRecordings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Speak {
            get {
                return this.SpeakField;
            }
            set {
                if ((this.SpeakField.Equals(value) != true)) {
                    this.SpeakField = value;
                    this.RaisePropertyChanged("Speak");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StartRecording {
            get {
                return this.StartRecordingField;
            }
            set {
                if ((this.StartRecordingField.Equals(value) != true)) {
                    this.StartRecordingField = value;
                    this.RaisePropertyChanged("StartRecording");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StopRecording {
            get {
                return this.StopRecordingField;
            }
            set {
                if ((this.StopRecordingField.Equals(value) != true)) {
                    this.StopRecordingField = value;
                    this.RaisePropertyChanged("StopRecording");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PtzSecurityInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class PtzSecurityInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManualControlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PresetControlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReserveControlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ManualControl {
            get {
                return this.ManualControlField;
            }
            set {
                if ((this.ManualControlField.Equals(value) != true)) {
                    this.ManualControlField = value;
                    this.RaisePropertyChanged("ManualControl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PresetControl {
            get {
                return this.PresetControlField;
            }
            set {
                if ((this.PresetControlField.Equals(value) != true)) {
                    this.PresetControlField = value;
                    this.RaisePropertyChanged("PresetControl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReserveControl {
            get {
                return this.ReserveControlField;
            }
            set {
                if ((this.ReserveControlField.Equals(value) != true)) {
                    this.ReserveControlField = value;
                    this.RaisePropertyChanged("ReserveControl");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HemisphereInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class HemisphereInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CenterXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CenterYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RadiusXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RadiusYField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CenterX {
            get {
                return this.CenterXField;
            }
            set {
                if ((this.CenterXField.Equals(value) != true)) {
                    this.CenterXField = value;
                    this.RaisePropertyChanged("CenterX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CenterY {
            get {
                return this.CenterYField;
            }
            set {
                if ((this.CenterYField.Equals(value) != true)) {
                    this.CenterYField = value;
                    this.RaisePropertyChanged("CenterY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RadiusX {
            get {
                return this.RadiusXField;
            }
            set {
                if ((this.RadiusXField.Equals(value) != true)) {
                    this.RadiusXField = value;
                    this.RaisePropertyChanged("RadiusX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RadiusY {
            get {
                return this.RadiusYField;
            }
            set {
                if ((this.RadiusYField.Equals(value) != true)) {
                    this.RadiusYField = value;
                    this.RaisePropertyChanged("RadiusY");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PositionInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class PositionInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TiltField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ZoomField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Pan {
            get {
                return this.PanField;
            }
            set {
                if ((this.PanField.Equals(value) != true)) {
                    this.PanField = value;
                    this.RaisePropertyChanged("Pan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Tilt {
            get {
                return this.TiltField;
            }
            set {
                if ((this.TiltField.Equals(value) != true)) {
                    this.TiltField = value;
                    this.RaisePropertyChanged("Tilt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Zoom {
            get {
                return this.ZoomField;
            }
            set {
                if ((this.ZoomField.Equals(value) != true)) {
                    this.ZoomField = value;
                    this.RaisePropertyChanged("Zoom");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImmerVisionInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class ImmerVisionInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LensProfileDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LensProfileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LensProfileRplField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LensProfileData {
            get {
                return this.LensProfileDataField;
            }
            set {
                if ((object.ReferenceEquals(this.LensProfileDataField, value) != true)) {
                    this.LensProfileDataField = value;
                    this.RaisePropertyChanged("LensProfileData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LensProfileName {
            get {
                return this.LensProfileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LensProfileNameField, value) != true)) {
                    this.LensProfileNameField = value;
                    this.RaisePropertyChanged("LensProfileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LensProfileRpl {
            get {
                return this.LensProfileRplField;
            }
            set {
                if ((object.ReferenceEquals(this.LensProfileRplField, value) != true)) {
                    this.LensProfileRplField = value;
                    this.RaisePropertyChanged("LensProfileRpl");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CapabilityInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class CapabilityInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AbsoluteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutomaticField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CapabilityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RelativeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SpeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StopField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Absolute {
            get {
                return this.AbsoluteField;
            }
            set {
                if ((this.AbsoluteField.Equals(value) != true)) {
                    this.AbsoluteField = value;
                    this.RaisePropertyChanged("Absolute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Automatic {
            get {
                return this.AutomaticField;
            }
            set {
                if ((this.AutomaticField.Equals(value) != true)) {
                    this.AutomaticField = value;
                    this.RaisePropertyChanged("Automatic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CapabilityId {
            get {
                return this.CapabilityIdField;
            }
            set {
                if ((this.CapabilityIdField.Equals(value) != true)) {
                    this.CapabilityIdField = value;
                    this.RaisePropertyChanged("CapabilityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Relative {
            get {
                return this.RelativeField;
            }
            set {
                if ((this.RelativeField.Equals(value) != true)) {
                    this.RelativeField = value;
                    this.RaisePropertyChanged("Relative");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((this.SpeedField.Equals(value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Start {
            get {
                return this.StartField;
            }
            set {
                if ((this.StartField.Equals(value) != true)) {
                    this.StartField = value;
                    this.RaisePropertyChanged("Start");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Stop {
            get {
                return this.StopField;
            }
            set {
                if ((this.StopField.Equals(value) != true)) {
                    this.StopField = value;
                    this.RaisePropertyChanged("Stop");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PresetInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class PresetInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.PositionInfo PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortcutField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Locked {
            get {
                return this.LockedField;
            }
            set {
                if ((this.LockedField.Equals(value) != true)) {
                    this.LockedField = value;
                    this.RaisePropertyChanged("Locked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.PositionInfo Position {
            get {
                return this.PositionField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionField, value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shortcut {
            get {
                return this.ShortcutField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortcutField, value) != true)) {
                    this.ShortcutField = value;
                    this.RaisePropertyChanged("Shortcut");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RetentionOption", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class RetentionOption : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.RetentionOptionType RetentionOptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RetentionUnitsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.RetentionOptionType RetentionOptionType {
            get {
                return this.RetentionOptionTypeField;
            }
            set {
                if ((this.RetentionOptionTypeField.Equals(value) != true)) {
                    this.RetentionOptionTypeField = value;
                    this.RaisePropertyChanged("RetentionOptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RetentionUnits {
            get {
                return this.RetentionUnitsField;
            }
            set {
                if ((this.RetentionUnitsField.Equals(value) != true)) {
                    this.RetentionUnitsField = value;
                    this.RaisePropertyChanged("RetentionUnits");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RetentionOptionType", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.Common.Proxy.Server")]
    public enum RetentionOptionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unused = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Days = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Weeks = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Months = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Years = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserDefined = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Indefinite = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventSource", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    public enum EventSource : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Undefined = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Device = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        External = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hardware = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Recorder = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Server = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        System = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Timer = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceDisabledInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class DeviceDisabledInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DeviceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid HardwareIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RecorderIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DeviceId {
            get {
                return this.DeviceIdField;
            }
            set {
                if ((this.DeviceIdField.Equals(value) != true)) {
                    this.DeviceIdField = value;
                    this.RaisePropertyChanged("DeviceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceName {
            get {
                return this.DeviceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceNameField, value) != true)) {
                    this.DeviceNameField = value;
                    this.RaisePropertyChanged("DeviceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceType {
            get {
                return this.DeviceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceTypeField, value) != true)) {
                    this.DeviceTypeField = value;
                    this.RaisePropertyChanged("DeviceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid HardwareId {
            get {
                return this.HardwareIdField;
            }
            set {
                if ((this.HardwareIdField.Equals(value) != true)) {
                    this.HardwareIdField = value;
                    this.RaisePropertyChanged("HardwareId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RecorderId {
            get {
                return this.RecorderIdField;
            }
            set {
                if ((this.RecorderIdField.Equals(value) != true)) {
                    this.RecorderIdField = value;
                    this.RaisePropertyChanged("RecorderId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ViewGroupInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class ViewGroupInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifiedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReadOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.ViewGroupType ViewGroupTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModifiedTime {
            get {
                return this.LastModifiedTimeField;
            }
            set {
                if ((this.LastModifiedTimeField.Equals(value) != true)) {
                    this.LastModifiedTimeField = value;
                    this.RaisePropertyChanged("LastModifiedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedUser {
            get {
                return this.LastModifiedUserField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedUserField, value) != true)) {
                    this.LastModifiedUserField = value;
                    this.RaisePropertyChanged("LastModifiedUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReadOnly {
            get {
                return this.ReadOnlyField;
            }
            set {
                if ((this.ReadOnlyField.Equals(value) != true)) {
                    this.ReadOnlyField = value;
                    this.RaisePropertyChanged("ReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.ViewGroupType ViewGroupType {
            get {
                return this.ViewGroupTypeField;
            }
            set {
                if ((this.ViewGroupTypeField.Equals(value) != true)) {
                    this.ViewGroupTypeField = value;
                    this.RaisePropertyChanged("ViewGroupType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ViewGroupType", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    public enum ViewGroupType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal = 0,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetViewGroupDataResultType", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    public enum SetViewGroupDataResultType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnspecifiedError = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadOnlyError = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ModifiedError = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomSettingInfo", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class CustomSettingInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifiedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedUserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModifiedTime {
            get {
                return this.LastModifiedTimeField;
            }
            set {
                if ((this.LastModifiedTimeField.Equals(value) != true)) {
                    this.LastModifiedTimeField = value;
                    this.RaisePropertyChanged("LastModifiedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedUser {
            get {
                return this.LastModifiedUserField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedUserField, value) != true)) {
                    this.LastModifiedUserField = value;
                    this.RaisePropertyChanged("LastModifiedUser");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetCustomSettingResultType", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    public enum SetCustomSettingResultType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnspecifiedError = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ModifiedError = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyValue", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class KeyValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlertOccurrence", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class AlertOccurrence : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid AlertIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AlertId {
            get {
                return this.AlertIdField;
            }
            set {
                if ((this.AlertIdField.Equals(value) != true)) {
                    this.AlertIdField = value;
                    this.RaisePropertyChanged("AlertId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Change", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class Change : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.ChangeType ChangeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.ChangeType ChangeType {
            get {
                return this.ChangeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTypeField, value) != true)) {
                    this.ChangeTypeField = value;
                    this.RaisePropertyChanged("ChangeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChangeType", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class ChangeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HardwareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RecorderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Hardware {
            get {
                return this.HardwareField;
            }
            set {
                if ((this.HardwareField.Equals(value) != true)) {
                    this.HardwareField = value;
                    this.RaisePropertyChanged("Hardware");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Recorder {
            get {
                return this.RecorderField;
            }
            set {
                if ((this.RecorderField.Equals(value) != true)) {
                    this.RecorderField = value;
                    this.RaisePropertyChanged("Recorder");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookmarkReference", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class BookmarkReference : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reference {
            get {
                return this.ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceField, value) != true)) {
                    this.ReferenceField = value;
                    this.RaisePropertyChanged("Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bookmark", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class Bookmark : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DeviceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HeaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeBeginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeTriggedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DeviceId {
            get {
                return this.DeviceIdField;
            }
            set {
                if ((this.DeviceIdField.Equals(value) != true)) {
                    this.DeviceIdField = value;
                    this.RaisePropertyChanged("DeviceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Header {
            get {
                return this.HeaderField;
            }
            set {
                if ((object.ReferenceEquals(this.HeaderField, value) != true)) {
                    this.HeaderField = value;
                    this.RaisePropertyChanged("Header");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reference {
            get {
                return this.ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceField, value) != true)) {
                    this.ReferenceField = value;
                    this.RaisePropertyChanged("Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeBegin {
            get {
                return this.TimeBeginField;
            }
            set {
                if ((this.TimeBeginField.Equals(value) != true)) {
                    this.TimeBeginField = value;
                    this.RaisePropertyChanged("TimeBegin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeEnd {
            get {
                return this.TimeEndField;
            }
            set {
                if ((this.TimeEndField.Equals(value) != true)) {
                    this.TimeEndField = value;
                    this.RaisePropertyChanged("TimeEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeTrigged {
            get {
                return this.TimeTriggedField;
            }
            set {
                if ((this.TimeTriggedField.Equals(value) != true)) {
                    this.TimeTriggedField = value;
                    this.RaisePropertyChanged("TimeTrigged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MediaDeviceType", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    public enum MediaDeviceType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Camera = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Microphone = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Speaker = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarkedDataReference", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class MarkedDataReference : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reference {
            get {
                return this.ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceField, value) != true)) {
                    this.ReferenceField = value;
                    this.RaisePropertyChanged("Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarkedDataResult", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class MarkedDataResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.FaultDevice[] FaultDevicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.MarkedData MarkedDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.ResultStatus StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.FaultDevice[] FaultDevices {
            get {
                return this.FaultDevicesField;
            }
            set {
                if ((object.ReferenceEquals(this.FaultDevicesField, value) != true)) {
                    this.FaultDevicesField = value;
                    this.RaisePropertyChanged("FaultDevices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.MarkedData MarkedData {
            get {
                return this.MarkedDataField;
            }
            set {
                if ((object.ReferenceEquals(this.MarkedDataField, value) != true)) {
                    this.MarkedDataField = value;
                    this.RaisePropertyChanged("MarkedData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.ResultStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarkedData", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class MarkedData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid[] DeviceIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HeaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RetentionExpireField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.RetentionOption RetentionOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RetentionSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TagTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseRetentionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid[] DeviceIds {
            get {
                return this.DeviceIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceIdsField, value) != true)) {
                    this.DeviceIdsField = value;
                    this.RaisePropertyChanged("DeviceIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Header {
            get {
                return this.HeaderField;
            }
            set {
                if ((object.ReferenceEquals(this.HeaderField, value) != true)) {
                    this.HeaderField = value;
                    this.RaisePropertyChanged("Header");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reference {
            get {
                return this.ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceField, value) != true)) {
                    this.ReferenceField = value;
                    this.RaisePropertyChanged("Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RetentionExpire {
            get {
                return this.RetentionExpireField;
            }
            set {
                if ((this.RetentionExpireField.Equals(value) != true)) {
                    this.RetentionExpireField = value;
                    this.RaisePropertyChanged("RetentionExpire");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.RetentionOption RetentionOption {
            get {
                return this.RetentionOptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RetentionOptionField, value) != true)) {
                    this.RetentionOptionField = value;
                    this.RaisePropertyChanged("RetentionOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RetentionSize {
            get {
                return this.RetentionSizeField;
            }
            set {
                if ((this.RetentionSizeField.Equals(value) != true)) {
                    this.RetentionSizeField = value;
                    this.RaisePropertyChanged("RetentionSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TagTime {
            get {
                return this.TagTimeField;
            }
            set {
                if ((this.TagTimeField.Equals(value) != true)) {
                    this.TagTimeField = value;
                    this.RaisePropertyChanged("TagTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseRetention {
            get {
                return this.UseRetentionField;
            }
            set {
                if ((this.UseRetentionField.Equals(value) != true)) {
                    this.UseRetentionField = value;
                    this.RaisePropertyChanged("UseRetention");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaultDevice", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class FaultDevice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DeviceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DeviceId {
            get {
                return this.DeviceIdField;
            }
            set {
                if ((this.DeviceIdField.Equals(value) != true)) {
                    this.DeviceIdField = value;
                    this.RaisePropertyChanged("DeviceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultStatus", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.Common.Proxy.Server")]
    public enum ResultStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Undefined = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failed = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartlySuccess = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MarkedDataNotFound = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FeatureNotLicensed = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RecorderNotFound = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManagementServerUnavailable = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unauthorized = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientProfile", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class ClientProfile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.ClientProfileSetting[] ClientProfileSettingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SettingsLastModifiedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.ClientProfileSetting[] ClientProfileSettings {
            get {
                return this.ClientProfileSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientProfileSettingsField, value) != true)) {
                    this.ClientProfileSettingsField = value;
                    this.RaisePropertyChanged("ClientProfileSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SettingsLastModified {
            get {
                return this.SettingsLastModifiedField;
            }
            set {
                if ((this.SettingsLastModifiedField.Equals(value) != true)) {
                    this.SettingsLastModifiedField = value;
                    this.RaisePropertyChanged("SettingsLastModified");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientProfileSetting", Namespace="http://videoos.net/2/XProtectCSServerCommand")]
    [System.SerializableAttribute()]
    public partial class ClientProfileSetting : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Locked {
            get {
                return this.LockedField;
            }
            set {
                if ((this.LockedField.Equals(value) != true)) {
                    this.LockedField = value;
                    this.RaisePropertyChanged("Locked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ViewGroupInternal", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.Common.Proxy.Server")]
    [System.SerializableAttribute()]
    public partial class ViewGroupInternal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.ViewGroupInternalData ViewGroupDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.ViewGroupInfo ViewGroupInfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.ViewGroupInternalData ViewGroupData {
            get {
                return this.ViewGroupDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ViewGroupDataField, value) != true)) {
                    this.ViewGroupDataField = value;
                    this.RaisePropertyChanged("ViewGroupData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.ViewGroupInfo ViewGroupInfo {
            get {
                return this.ViewGroupInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ViewGroupInfoField, value) != true)) {
                    this.ViewGroupInfoField = value;
                    this.RaisePropertyChanged("ViewGroupInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ViewGroupInternalData", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.Common.Proxy.Server")]
    [System.SerializableAttribute()]
    public partial class ViewGroupInternalData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DataVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ViewGroupDataXmlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int XmlVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DataVersion {
            get {
                return this.DataVersionField;
            }
            set {
                if ((this.DataVersionField.Equals(value) != true)) {
                    this.DataVersionField = value;
                    this.RaisePropertyChanged("DataVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ViewGroupDataXml {
            get {
                return this.ViewGroupDataXmlField;
            }
            set {
                if ((object.ReferenceEquals(this.ViewGroupDataXmlField, value) != true)) {
                    this.ViewGroupDataXmlField = value;
                    this.RaisePropertyChanged("ViewGroupDataXml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int XmlVersion {
            get {
                return this.XmlVersionField;
            }
            set {
                if ((this.XmlVersionField.Equals(value) != true)) {
                    this.XmlVersionField = value;
                    this.RaisePropertyChanged("XmlVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomSettingInternal", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.Common.Proxy.Server")]
    [System.SerializableAttribute()]
    public partial class CustomSettingInternal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.CustomSettingInternalData CustomSettingDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ServerCommandService.CustomSettingInfo CustomSettingInfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.CustomSettingInternalData CustomSettingData {
            get {
                return this.CustomSettingDataField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomSettingDataField, value) != true)) {
                    this.CustomSettingDataField = value;
                    this.RaisePropertyChanged("CustomSettingData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ServerCommandService.CustomSettingInfo CustomSettingInfo {
            get {
                return this.CustomSettingInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomSettingInfoField, value) != true)) {
                    this.CustomSettingInfoField = value;
                    this.RaisePropertyChanged("CustomSettingInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomSettingInternalData", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.Common.Proxy.Server")]
    [System.SerializableAttribute()]
    public partial class CustomSettingInternalData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomSettingDataXmlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DataVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomSettingDataXml {
            get {
                return this.CustomSettingDataXmlField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomSettingDataXmlField, value) != true)) {
                    this.CustomSettingDataXmlField = value;
                    this.RaisePropertyChanged("CustomSettingDataXml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DataVersion {
            get {
                return this.DataVersionField;
            }
            set {
                if ((this.DataVersionField.Equals(value) != true)) {
                    this.DataVersionField = value;
                    this.RaisePropertyChanged("DataVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SortOrderOption", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.Common.Proxy.Server")]
    public enum SortOrderOption : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Header = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Description = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StartTime = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TagTime = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EndTime = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreateTime = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RetentionExpireTime = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserName = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Size = 8,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://videoos.net/2/XProtectCSServerCommand", ConfigurationName="ServerCommandService.IServerCommandService")]
    public interface IServerCommandService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetVersion", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetVersionResp" +
            "onse")]
        int GetVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetVersion", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetVersionResp" +
            "onse")]
        System.Threading.Tasks.Task<int> GetVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetServerVersi" +
            "on", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetServerVersi" +
            "onResponse")]
        string GetServerVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetServerVersi" +
            "on", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetServerVersi" +
            "onResponse")]
        System.Threading.Tasks.Task<string> GetServerVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetProductInfo" +
            "", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetProductInfo" +
            "Response")]
        ConfigApiSharp.ServerCommandService.ProductInfo GetProductInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetProductInfo" +
            "", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetProductInfo" +
            "Response")]
        System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.ProductInfo> GetProductInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetSystemLicen" +
            "seInfo", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetSystemLicen" +
            "seInfoResponse")]
        ConfigApiSharp.ServerCommandService.SystemLicenseInfo GetSystemLicenseInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetSystemLicen" +
            "seInfo", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetSystemLicen" +
            "seInfoResponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.SystemLicenseInfo> GetSystemLicenseInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetSmartClient" +
            "Version", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetSmartClient" +
            "VersionResponse")]
        ConfigApiSharp.ServerCommandService.SmartClientVersion GetSmartClientVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetSmartClient" +
            "Version", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetSmartClient" +
            "VersionResponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.SmartClientVersion> GetSmartClientVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/CheckSmartClie" +
            "ntVersion", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/CheckSmartClie" +
            "ntVersionResponse")]
        ConfigApiSharp.ServerCommandService.SmartClientVersion CheckSmartClientVersion(int major, int minor, string revision);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/CheckSmartClie" +
            "ntVersion", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/CheckSmartClie" +
            "ntVersionResponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.SmartClientVersion> CheckSmartClientVersionAsync(int major, int minor, string revision);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/IsOnline", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/IsOnlineRespon" +
            "se")]
        bool IsOnline();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/IsOnline", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/IsOnlineRespon" +
            "se")]
        System.Threading.Tasks.Task<bool> IsOnlineAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/Login", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/LoginResponse")]
        ConfigApiSharp.ServerCommandService.LoginInfo Login(System.Guid instanceId, string currentToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/Login", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/LoginResponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.LoginInfo> LoginAsync(System.Guid instanceId, string currentToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/Logout", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/LogoutResponse" +
            "")]
        void Logout(System.Guid instanceId, string currentToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/Logout", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/LogoutResponse" +
            "")]
        System.Threading.Tasks.Task LogoutAsync(System.Guid instanceId, string currentToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/Authorize", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/AuthorizeRespo" +
            "nse")]
        string Authorize(string userDomainName, ConfigApiSharp.ServerCommandService.AuthorizationActionType type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/Authorize", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/AuthorizeRespo" +
            "nse")]
        System.Threading.Tasks.Task<string> AuthorizeAsync(string userDomainName, ConfigApiSharp.ServerCommandService.AuthorizationActionType type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetUserInfo", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetUserInfoRes" +
            "ponse")]
        ConfigApiSharp.ServerCommandService.UserInfo GetUserInfo(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetUserInfo", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetUserInfoRes" +
            "ponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.UserInfo> GetUserInfoAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetConfigurati" +
            "on", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetConfigurati" +
            "onResponse")]
        ConfigApiSharp.ServerCommandService.ConfigurationInfo GetConfiguration(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetConfigurati" +
            "on", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetConfigurati" +
            "onResponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.ConfigurationInfo> GetConfigurationAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetConfigurati" +
            "onRecorders", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetConfigurati" +
            "onRecordersResponse")]
        ConfigApiSharp.ServerCommandService.RecorderInfo[] GetConfigurationRecorders(string token, System.Guid[] recorderIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetConfigurati" +
            "onRecorders", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetConfigurati" +
            "onRecordersResponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.RecorderInfo[]> GetConfigurationRecordersAsync(string token, System.Guid[] recorderIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetConfigurati" +
            "onHardware", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetConfigurati" +
            "onHardwareResponse")]
        ConfigApiSharp.ServerCommandService.HardwareInfo[] GetConfigurationHardware(string token, System.Guid[] hardwareIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetConfigurati" +
            "onHardware", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetConfigurati" +
            "onHardwareResponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.HardwareInfo[]> GetConfigurationHardwareAsync(string token, System.Guid[] hardwareIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetDevicesDisa" +
            "bled", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetDevicesDisa" +
            "bledResponse")]
        ConfigApiSharp.ServerCommandService.DeviceDisabledInfo[] GetDevicesDisabled(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetDevicesDisa" +
            "bled", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetDevicesDisa" +
            "bledResponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.DeviceDisabledInfo[]> GetDevicesDisabledAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetVmoServices" +
            "List", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetVmoServices" +
            "ListResponse")]
        System.Collections.DictionaryEntry[] GetVmoServicesList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetVmoServices" +
            "List", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetVmoServices" +
            "ListResponse")]
        System.Threading.Tasks.Task<System.Collections.DictionaryEntry[]> GetVmoServicesListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetViewGroups", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetViewGroupsR" +
            "esponse")]
        ConfigApiSharp.ServerCommandService.ViewGroupInfo[] GetViewGroups(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetViewGroups", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetViewGroupsR" +
            "esponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.ViewGroupInfo[]> GetViewGroupsAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetViewGroupDa" +
            "ta", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetViewGroupDa" +
            "taResponse")]
        ConfigApiSharp.ServerCommandService.ViewGroupInternal GetViewGroupData(string token, System.Guid viewGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetViewGroupDa" +
            "ta", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetViewGroupDa" +
            "taResponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.ViewGroupInternal> GetViewGroupDataAsync(string token, System.Guid viewGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/SetViewGroupDa" +
            "ta", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/SetViewGroupDa" +
            "taResponse")]
        ConfigApiSharp.ServerCommandService.SetViewGroupDataResultType SetViewGroupData(string token, System.Guid viewGroupId, ConfigApiSharp.ServerCommandService.ViewGroupInternalData viewGroupdata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/SetViewGroupDa" +
            "ta", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/SetViewGroupDa" +
            "taResponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.SetViewGroupDataResultType> SetViewGroupDataAsync(string token, System.Guid viewGroupId, ConfigApiSharp.ServerCommandService.ViewGroupInternalData viewGroupdata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetCustomSetti" +
            "ngDataGlobal", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetCustomSetti" +
            "ngDataGlobalResponse")]
        ConfigApiSharp.ServerCommandService.CustomSettingInternal GetCustomSettingDataGlobal(string token, System.Guid customSettingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetCustomSetti" +
            "ngDataGlobal", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetCustomSetti" +
            "ngDataGlobalResponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.CustomSettingInternal> GetCustomSettingDataGlobalAsync(string token, System.Guid customSettingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetCustomSetti" +
            "ngDataUser", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetCustomSetti" +
            "ngDataUserResponse")]
        ConfigApiSharp.ServerCommandService.CustomSettingInternal GetCustomSettingDataUser(string token, System.Guid customSettingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetCustomSetti" +
            "ngDataUser", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetCustomSetti" +
            "ngDataUserResponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.CustomSettingInternal> GetCustomSettingDataUserAsync(string token, System.Guid customSettingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/SetCustomSetti" +
            "ngDataGlobal", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/SetCustomSetti" +
            "ngDataGlobalResponse")]
        ConfigApiSharp.ServerCommandService.SetCustomSettingResultType SetCustomSettingDataGlobal(string token, System.Guid customSettingId, ConfigApiSharp.ServerCommandService.CustomSettingInternalData customSettingData, bool forceOverride);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/SetCustomSetti" +
            "ngDataGlobal", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/SetCustomSetti" +
            "ngDataGlobalResponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.SetCustomSettingResultType> SetCustomSettingDataGlobalAsync(string token, System.Guid customSettingId, ConfigApiSharp.ServerCommandService.CustomSettingInternalData customSettingData, bool forceOverride);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/SetCustomSetti" +
            "ngDataUser", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/SetCustomSetti" +
            "ngDataUserResponse")]
        ConfigApiSharp.ServerCommandService.SetCustomSettingResultType SetCustomSettingDataUser(string token, System.Guid customSettingId, ConfigApiSharp.ServerCommandService.CustomSettingInternalData customSettingData, bool forceOverride);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/SetCustomSetti" +
            "ngDataUser", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/SetCustomSetti" +
            "ngDataUserResponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.SetCustomSettingResultType> SetCustomSettingDataUserAsync(string token, System.Guid customSettingId, ConfigApiSharp.ServerCommandService.CustomSettingInternalData customSettingData, bool forceOverride);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/EventTrigger", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/EventTriggerRe" +
            "sponse")]
        void EventTrigger(string token, System.Guid eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/EventTrigger", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/EventTriggerRe" +
            "sponse")]
        System.Threading.Tasks.Task EventTriggerAsync(string token, System.Guid eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/EventTriggerWi" +
            "thMetadata", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/EventTriggerWi" +
            "thMetadataResponse")]
        void EventTriggerWithMetadata(string token, System.Guid eventId, ConfigApiSharp.ServerCommandService.KeyValue[] metadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/EventTriggerWi" +
            "thMetadata", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/EventTriggerWi" +
            "thMetadataResponse")]
        System.Threading.Tasks.Task EventTriggerWithMetadataAsync(string token, System.Guid eventId, ConfigApiSharp.ServerCommandService.KeyValue[] metadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/AlertsGetAroun" +
            "dWithSpan", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/AlertsGetAroun" +
            "dWithSpanResponse")]
        ConfigApiSharp.ServerCommandService.AlertOccurrence[] AlertsGetAroundWithSpan(string token, System.Guid[] alertIds, System.DateTime centerTime, ConfigApiSharp.ServerCommandService.TimeDuration maxTimeBefore, int maxCountBefore, ConfigApiSharp.ServerCommandService.TimeDuration maxTimeAfter, int maxCountAfter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/AlertsGetAroun" +
            "dWithSpan", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/AlertsGetAroun" +
            "dWithSpanResponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.AlertOccurrence[]> AlertsGetAroundWithSpanAsync(string token, System.Guid[] alertIds, System.DateTime centerTime, ConfigApiSharp.ServerCommandService.TimeDuration maxTimeBefore, int maxCountBefore, ConfigApiSharp.ServerCommandService.TimeDuration maxTimeAfter, int maxCountAfter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/MatrixMonitorA" +
            "ctivateCamera", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/MatrixMonitorA" +
            "ctivateCameraResponse")]
        void MatrixMonitorActivateCamera(string token, System.Guid matrixMonitorId, System.Guid deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/MatrixMonitorA" +
            "ctivateCamera", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/MatrixMonitorA" +
            "ctivateCameraResponse")]
        System.Threading.Tasks.Task MatrixMonitorActivateCameraAsync(string token, System.Guid matrixMonitorId, System.Guid deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/QueryChanges", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/QueryChangesRe" +
            "sponse")]
        ConfigApiSharp.ServerCommandService.Change[] QueryChanges(string token, System.DateTime changesFrom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/QueryChanges", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/QueryChangesRe" +
            "sponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.Change[]> QueryChangesAsync(string token, System.DateTime changesFrom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/QueryRecorderI" +
            "nfo", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/QueryRecorderI" +
            "nfoResponse")]
        ConfigApiSharp.ServerCommandService.RecorderInfo QueryRecorderInfo(string token, System.Guid recorderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/QueryRecorderI" +
            "nfo", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/QueryRecorderI" +
            "nfoResponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.RecorderInfo> QueryRecorderInfoAsync(string token, System.Guid recorderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/BookmarkGetNew" +
            "Reference", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/BookmarkGetNew" +
            "ReferenceResponse")]
        ConfigApiSharp.ServerCommandService.BookmarkReference BookmarkGetNewReference(string token, System.Guid deviceId, bool live);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/BookmarkGetNew" +
            "Reference", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/BookmarkGetNew" +
            "ReferenceResponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.BookmarkReference> BookmarkGetNewReferenceAsync(string token, System.Guid deviceId, bool live);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/BookmarkCreate" +
            "", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/BookmarkCreate" +
            "Response")]
        ConfigApiSharp.ServerCommandService.Bookmark BookmarkCreate(string token, System.Guid deviceId, System.DateTime timeBegin, System.DateTime timeTrigged, System.DateTime timeEnd, string reference, string header, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/BookmarkCreate" +
            "", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/BookmarkCreate" +
            "Response")]
        System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.Bookmark> BookmarkCreateAsync(string token, System.Guid deviceId, System.DateTime timeBegin, System.DateTime timeTrigged, System.DateTime timeEnd, string reference, string header, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/BookmarkUpdate" +
            "", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/BookmarkUpdate" +
            "Response")]
        ConfigApiSharp.ServerCommandService.Bookmark BookmarkUpdate(string token, System.Guid bookmarkId, System.Guid deviceId, System.DateTime timeBegin, System.DateTime timeTrigged, System.DateTime timeEnd, string reference, string header, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/BookmarkUpdate" +
            "", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/BookmarkUpdate" +
            "Response")]
        System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.Bookmark> BookmarkUpdateAsync(string token, System.Guid bookmarkId, System.Guid deviceId, System.DateTime timeBegin, System.DateTime timeTrigged, System.DateTime timeEnd, string reference, string header, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/BookmarkDelete" +
            "", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/BookmarkDelete" +
            "Response")]
        void BookmarkDelete(string token, System.Guid bookmarkId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/BookmarkDelete" +
            "", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/BookmarkDelete" +
            "Response")]
        System.Threading.Tasks.Task BookmarkDeleteAsync(string token, System.Guid bookmarkId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/BookmarkGet", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/BookmarkGetRes" +
            "ponse")]
        ConfigApiSharp.ServerCommandService.Bookmark BookmarkGet(string token, System.Guid bookmarkId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/BookmarkGet", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/BookmarkGetRes" +
            "ponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.Bookmark> BookmarkGetAsync(string token, System.Guid bookmarkId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/BookmarkSearch" +
            "Time", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/BookmarkSearch" +
            "TimeResponse")]
        ConfigApiSharp.ServerCommandService.Bookmark[] BookmarkSearchTime(string token, System.DateTime time, ConfigApiSharp.ServerCommandService.TimeDuration timeLimit, int countLimit, ConfigApiSharp.ServerCommandService.MediaDeviceType[] deviceTypes, System.Guid[] optDeviceIds, string[] optUsers, string optSearchStr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/BookmarkSearch" +
            "Time", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/BookmarkSearch" +
            "TimeResponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.Bookmark[]> BookmarkSearchTimeAsync(string token, System.DateTime time, ConfigApiSharp.ServerCommandService.TimeDuration timeLimit, int countLimit, ConfigApiSharp.ServerCommandService.MediaDeviceType[] deviceTypes, System.Guid[] optDeviceIds, string[] optUsers, string optSearchStr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/BookmarkSearch" +
            "FromBookmark", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/BookmarkSearch" +
            "FromBookmarkResponse")]
        ConfigApiSharp.ServerCommandService.Bookmark[] BookmarkSearchFromBookmark(string token, System.Guid fromBookmarkId, ConfigApiSharp.ServerCommandService.TimeDuration timeLimit, int countLimit, ConfigApiSharp.ServerCommandService.MediaDeviceType[] deviceTypes, System.Guid[] optDeviceIds, string[] optUsers, string optSearchStr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/BookmarkSearch" +
            "FromBookmark", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/BookmarkSearch" +
            "FromBookmarkResponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.Bookmark[]> BookmarkSearchFromBookmarkAsync(string token, System.Guid fromBookmarkId, ConfigApiSharp.ServerCommandService.TimeDuration timeLimit, int countLimit, ConfigApiSharp.ServerCommandService.MediaDeviceType[] deviceTypes, System.Guid[] optDeviceIds, string[] optUsers, string optSearchStr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/MarkedDataGetN" +
            "ewReference", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/MarkedDataGetN" +
            "ewReferenceResponse")]
        ConfigApiSharp.ServerCommandService.MarkedDataReference MarkedDataGetNewReference(string token, System.Guid[] deviceId, bool live);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/MarkedDataGetN" +
            "ewReference", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/MarkedDataGetN" +
            "ewReferenceResponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.MarkedDataReference> MarkedDataGetNewReferenceAsync(string token, System.Guid[] deviceId, bool live);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/MarkedDataCrea" +
            "te", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/MarkedDataCrea" +
            "teResponse")]
        ConfigApiSharp.ServerCommandService.MarkedDataResult MarkedDataCreate(string token, System.Guid markedDataId, System.Guid[] deviceIds, System.DateTime timeStart, System.DateTime timeTag, System.DateTime timeEnd, string reference, string header, string description, int markedDataType, bool useRetention, System.DateTime retentionExpire, ConfigApiSharp.ServerCommandService.RetentionOption retentionOption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/MarkedDataCrea" +
            "te", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/MarkedDataCrea" +
            "teResponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.MarkedDataResult> MarkedDataCreateAsync(string token, System.Guid markedDataId, System.Guid[] deviceIds, System.DateTime timeStart, System.DateTime timeTag, System.DateTime timeEnd, string reference, string header, string description, int markedDataType, bool useRetention, System.DateTime retentionExpire, ConfigApiSharp.ServerCommandService.RetentionOption retentionOption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/MarkedDataUpda" +
            "te", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/MarkedDataUpda" +
            "teResponse")]
        ConfigApiSharp.ServerCommandService.MarkedDataResult MarkedDataUpdate(string token, System.Guid markedDataId, System.Guid[] deviceIds, System.DateTime timeStart, System.DateTime timeTag, System.DateTime timeEnd, string reference, string header, string description, int markedDataType, bool useRetention, System.DateTime retentionExpire, ConfigApiSharp.ServerCommandService.RetentionOption retentionOption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/MarkedDataUpda" +
            "te", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/MarkedDataUpda" +
            "teResponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.MarkedDataResult> MarkedDataUpdateAsync(string token, System.Guid markedDataId, System.Guid[] deviceIds, System.DateTime timeStart, System.DateTime timeTag, System.DateTime timeEnd, string reference, string header, string description, int markedDataType, bool useRetention, System.DateTime retentionExpire, ConfigApiSharp.ServerCommandService.RetentionOption retentionOption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/MarkedDataDele" +
            "te", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/MarkedDataDele" +
            "teResponse")]
        ConfigApiSharp.ServerCommandService.MarkedDataResult[] MarkedDataDelete(string token, System.Guid[] markedDataIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/MarkedDataDele" +
            "te", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/MarkedDataDele" +
            "teResponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.MarkedDataResult[]> MarkedDataDeleteAsync(string token, System.Guid[] markedDataIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/MarkedDataGet", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/MarkedDataGetR" +
            "esponse")]
        ConfigApiSharp.ServerCommandService.MarkedData MarkedDataGet(string token, System.Guid markedDataId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/MarkedDataGet", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/MarkedDataGetR" +
            "esponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.MarkedData> MarkedDataGetAsync(string token, System.Guid markedDataId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/MarkedDataSear" +
            "ch", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/MarkedDataSear" +
            "chResponse")]
        ConfigApiSharp.ServerCommandService.MarkedData[] MarkedDataSearch(
                    string token, 
                    System.Guid[] deviceIds, 
                    string searchText, 
                    string[] users, 
                    System.DateTime createdFromTime, 
                    System.DateTime createdToTime, 
                    System.DateTime markedDataFromTime, 
                    System.DateTime markedDataToTime, 
                    System.DateTime tagTimeFromTime, 
                    System.DateTime tagTimeToTime, 
                    System.DateTime retentionExpireFrom, 
                    System.DateTime retentionExpireTo, 
                    int pageIndex, 
                    int pageSize, 
                    ConfigApiSharp.ServerCommandService.SortOrderOption sortOrder, 
                    bool sortAscending);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/MarkedDataSear" +
            "ch", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/MarkedDataSear" +
            "chResponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.MarkedData[]> MarkedDataSearchAsync(
                    string token, 
                    System.Guid[] deviceIds, 
                    string searchText, 
                    string[] users, 
                    System.DateTime createdFromTime, 
                    System.DateTime createdToTime, 
                    System.DateTime markedDataFromTime, 
                    System.DateTime markedDataToTime, 
                    System.DateTime tagTimeFromTime, 
                    System.DateTime tagTimeToTime, 
                    System.DateTime retentionExpireFrom, 
                    System.DateTime retentionExpireTo, 
                    int pageIndex, 
                    int pageSize, 
                    ConfigApiSharp.ServerCommandService.SortOrderOption sortOrder, 
                    bool sortAscending);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetClientProfi" +
            "le", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetClientProfi" +
            "leResponse")]
        ConfigApiSharp.ServerCommandService.ClientProfile GetClientProfile(string token, bool withSetting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetClientProfi" +
            "le", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetClientProfi" +
            "leResponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.ClientProfile> GetClientProfileAsync(string token, bool withSetting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetPresets", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetPresetsResp" +
            "onse")]
        ConfigApiSharp.ServerCommandService.PresetInfo[] GetPresets(string token, System.Guid deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetPresets", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/GetPresetsResp" +
            "onse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.PresetInfo[]> GetPresetsAsync(string token, System.Guid deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/DeletePreset", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/DeletePresetRe" +
            "sponse")]
        void DeletePreset(string token, System.Guid id, System.Guid deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/DeletePreset", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/DeletePresetRe" +
            "sponse")]
        System.Threading.Tasks.Task DeletePresetAsync(string token, System.Guid id, System.Guid deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/UpdatePresetNa" +
            "me", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/UpdatePresetNa" +
            "meResponse")]
        void UpdatePresetName(string token, System.Guid id, System.Guid deviceId, string newName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/UpdatePresetNa" +
            "me", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/UpdatePresetNa" +
            "meResponse")]
        System.Threading.Tasks.Task UpdatePresetNameAsync(string token, System.Guid id, System.Guid deviceId, string newName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/UpdatePresetPo" +
            "sition", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/UpdatePresetPo" +
            "sitionResponse")]
        void UpdatePresetPosition(string token, System.Guid id, System.Guid deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/UpdatePresetPo" +
            "sition", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/UpdatePresetPo" +
            "sitionResponse")]
        System.Threading.Tasks.Task UpdatePresetPositionAsync(string token, System.Guid id, System.Guid deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/CreatePreset", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/CreatePresetRe" +
            "sponse")]
        System.Guid CreatePreset(string token, System.Guid deviceId, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/CreatePreset", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/CreatePresetRe" +
            "sponse")]
        System.Threading.Tasks.Task<System.Guid> CreatePresetAsync(string token, System.Guid deviceId, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/OrderPresets", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/OrderPresetsRe" +
            "sponse")]
        void OrderPresets(string token, System.Guid deviceId, System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/OrderPresets", ReplyAction="http://videoos.net/2/XProtectCSServerCommand/IServerCommandService/OrderPresetsRe" +
            "sponse")]
        System.Threading.Tasks.Task OrderPresetsAsync(string token, System.Guid deviceId, System.Guid[] ids);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServerCommandServiceChannel : ConfigApiSharp.ServerCommandService.IServerCommandService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServerCommandServiceClient : System.ServiceModel.ClientBase<ConfigApiSharp.ServerCommandService.IServerCommandService>, ConfigApiSharp.ServerCommandService.IServerCommandService {
        
        public ServerCommandServiceClient() {
        }
        
        public ServerCommandServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServerCommandServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServerCommandServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServerCommandServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int GetVersion() {
            return base.Channel.GetVersion();
        }
        
        public System.Threading.Tasks.Task<int> GetVersionAsync() {
            return base.Channel.GetVersionAsync();
        }
        
        public string GetServerVersion() {
            return base.Channel.GetServerVersion();
        }
        
        public System.Threading.Tasks.Task<string> GetServerVersionAsync() {
            return base.Channel.GetServerVersionAsync();
        }
        
        public ConfigApiSharp.ServerCommandService.ProductInfo GetProductInfo() {
            return base.Channel.GetProductInfo();
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.ProductInfo> GetProductInfoAsync() {
            return base.Channel.GetProductInfoAsync();
        }
        
        public ConfigApiSharp.ServerCommandService.SystemLicenseInfo GetSystemLicenseInfo() {
            return base.Channel.GetSystemLicenseInfo();
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.SystemLicenseInfo> GetSystemLicenseInfoAsync() {
            return base.Channel.GetSystemLicenseInfoAsync();
        }
        
        public ConfigApiSharp.ServerCommandService.SmartClientVersion GetSmartClientVersion() {
            return base.Channel.GetSmartClientVersion();
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.SmartClientVersion> GetSmartClientVersionAsync() {
            return base.Channel.GetSmartClientVersionAsync();
        }
        
        public ConfigApiSharp.ServerCommandService.SmartClientVersion CheckSmartClientVersion(int major, int minor, string revision) {
            return base.Channel.CheckSmartClientVersion(major, minor, revision);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.SmartClientVersion> CheckSmartClientVersionAsync(int major, int minor, string revision) {
            return base.Channel.CheckSmartClientVersionAsync(major, minor, revision);
        }
        
        public bool IsOnline() {
            return base.Channel.IsOnline();
        }
        
        public System.Threading.Tasks.Task<bool> IsOnlineAsync() {
            return base.Channel.IsOnlineAsync();
        }
        
        public ConfigApiSharp.ServerCommandService.LoginInfo Login(System.Guid instanceId, string currentToken) {
            return base.Channel.Login(instanceId, currentToken);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.LoginInfo> LoginAsync(System.Guid instanceId, string currentToken) {
            return base.Channel.LoginAsync(instanceId, currentToken);
        }
        
        public void Logout(System.Guid instanceId, string currentToken) {
            base.Channel.Logout(instanceId, currentToken);
        }
        
        public System.Threading.Tasks.Task LogoutAsync(System.Guid instanceId, string currentToken) {
            return base.Channel.LogoutAsync(instanceId, currentToken);
        }
        
        public string Authorize(string userDomainName, ConfigApiSharp.ServerCommandService.AuthorizationActionType type) {
            return base.Channel.Authorize(userDomainName, type);
        }
        
        public System.Threading.Tasks.Task<string> AuthorizeAsync(string userDomainName, ConfigApiSharp.ServerCommandService.AuthorizationActionType type) {
            return base.Channel.AuthorizeAsync(userDomainName, type);
        }
        
        public ConfigApiSharp.ServerCommandService.UserInfo GetUserInfo(string token) {
            return base.Channel.GetUserInfo(token);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.UserInfo> GetUserInfoAsync(string token) {
            return base.Channel.GetUserInfoAsync(token);
        }
        
        public ConfigApiSharp.ServerCommandService.ConfigurationInfo GetConfiguration(string token) {
            return base.Channel.GetConfiguration(token);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.ConfigurationInfo> GetConfigurationAsync(string token) {
            return base.Channel.GetConfigurationAsync(token);
        }
        
        public ConfigApiSharp.ServerCommandService.RecorderInfo[] GetConfigurationRecorders(string token, System.Guid[] recorderIds) {
            return base.Channel.GetConfigurationRecorders(token, recorderIds);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.RecorderInfo[]> GetConfigurationRecordersAsync(string token, System.Guid[] recorderIds) {
            return base.Channel.GetConfigurationRecordersAsync(token, recorderIds);
        }
        
        public ConfigApiSharp.ServerCommandService.HardwareInfo[] GetConfigurationHardware(string token, System.Guid[] hardwareIds) {
            return base.Channel.GetConfigurationHardware(token, hardwareIds);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.HardwareInfo[]> GetConfigurationHardwareAsync(string token, System.Guid[] hardwareIds) {
            return base.Channel.GetConfigurationHardwareAsync(token, hardwareIds);
        }
        
        public ConfigApiSharp.ServerCommandService.DeviceDisabledInfo[] GetDevicesDisabled(string token) {
            return base.Channel.GetDevicesDisabled(token);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.DeviceDisabledInfo[]> GetDevicesDisabledAsync(string token) {
            return base.Channel.GetDevicesDisabledAsync(token);
        }
        
        public System.Collections.DictionaryEntry[] GetVmoServicesList() {
            return base.Channel.GetVmoServicesList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.DictionaryEntry[]> GetVmoServicesListAsync() {
            return base.Channel.GetVmoServicesListAsync();
        }
        
        public ConfigApiSharp.ServerCommandService.ViewGroupInfo[] GetViewGroups(string token) {
            return base.Channel.GetViewGroups(token);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.ViewGroupInfo[]> GetViewGroupsAsync(string token) {
            return base.Channel.GetViewGroupsAsync(token);
        }
        
        public ConfigApiSharp.ServerCommandService.ViewGroupInternal GetViewGroupData(string token, System.Guid viewGroupId) {
            return base.Channel.GetViewGroupData(token, viewGroupId);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.ViewGroupInternal> GetViewGroupDataAsync(string token, System.Guid viewGroupId) {
            return base.Channel.GetViewGroupDataAsync(token, viewGroupId);
        }
        
        public ConfigApiSharp.ServerCommandService.SetViewGroupDataResultType SetViewGroupData(string token, System.Guid viewGroupId, ConfigApiSharp.ServerCommandService.ViewGroupInternalData viewGroupdata) {
            return base.Channel.SetViewGroupData(token, viewGroupId, viewGroupdata);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.SetViewGroupDataResultType> SetViewGroupDataAsync(string token, System.Guid viewGroupId, ConfigApiSharp.ServerCommandService.ViewGroupInternalData viewGroupdata) {
            return base.Channel.SetViewGroupDataAsync(token, viewGroupId, viewGroupdata);
        }
        
        public ConfigApiSharp.ServerCommandService.CustomSettingInternal GetCustomSettingDataGlobal(string token, System.Guid customSettingId) {
            return base.Channel.GetCustomSettingDataGlobal(token, customSettingId);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.CustomSettingInternal> GetCustomSettingDataGlobalAsync(string token, System.Guid customSettingId) {
            return base.Channel.GetCustomSettingDataGlobalAsync(token, customSettingId);
        }
        
        public ConfigApiSharp.ServerCommandService.CustomSettingInternal GetCustomSettingDataUser(string token, System.Guid customSettingId) {
            return base.Channel.GetCustomSettingDataUser(token, customSettingId);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.CustomSettingInternal> GetCustomSettingDataUserAsync(string token, System.Guid customSettingId) {
            return base.Channel.GetCustomSettingDataUserAsync(token, customSettingId);
        }
        
        public ConfigApiSharp.ServerCommandService.SetCustomSettingResultType SetCustomSettingDataGlobal(string token, System.Guid customSettingId, ConfigApiSharp.ServerCommandService.CustomSettingInternalData customSettingData, bool forceOverride) {
            return base.Channel.SetCustomSettingDataGlobal(token, customSettingId, customSettingData, forceOverride);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.SetCustomSettingResultType> SetCustomSettingDataGlobalAsync(string token, System.Guid customSettingId, ConfigApiSharp.ServerCommandService.CustomSettingInternalData customSettingData, bool forceOverride) {
            return base.Channel.SetCustomSettingDataGlobalAsync(token, customSettingId, customSettingData, forceOverride);
        }
        
        public ConfigApiSharp.ServerCommandService.SetCustomSettingResultType SetCustomSettingDataUser(string token, System.Guid customSettingId, ConfigApiSharp.ServerCommandService.CustomSettingInternalData customSettingData, bool forceOverride) {
            return base.Channel.SetCustomSettingDataUser(token, customSettingId, customSettingData, forceOverride);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.SetCustomSettingResultType> SetCustomSettingDataUserAsync(string token, System.Guid customSettingId, ConfigApiSharp.ServerCommandService.CustomSettingInternalData customSettingData, bool forceOverride) {
            return base.Channel.SetCustomSettingDataUserAsync(token, customSettingId, customSettingData, forceOverride);
        }
        
        public void EventTrigger(string token, System.Guid eventId) {
            base.Channel.EventTrigger(token, eventId);
        }
        
        public System.Threading.Tasks.Task EventTriggerAsync(string token, System.Guid eventId) {
            return base.Channel.EventTriggerAsync(token, eventId);
        }
        
        public void EventTriggerWithMetadata(string token, System.Guid eventId, ConfigApiSharp.ServerCommandService.KeyValue[] metadata) {
            base.Channel.EventTriggerWithMetadata(token, eventId, metadata);
        }
        
        public System.Threading.Tasks.Task EventTriggerWithMetadataAsync(string token, System.Guid eventId, ConfigApiSharp.ServerCommandService.KeyValue[] metadata) {
            return base.Channel.EventTriggerWithMetadataAsync(token, eventId, metadata);
        }
        
        public ConfigApiSharp.ServerCommandService.AlertOccurrence[] AlertsGetAroundWithSpan(string token, System.Guid[] alertIds, System.DateTime centerTime, ConfigApiSharp.ServerCommandService.TimeDuration maxTimeBefore, int maxCountBefore, ConfigApiSharp.ServerCommandService.TimeDuration maxTimeAfter, int maxCountAfter) {
            return base.Channel.AlertsGetAroundWithSpan(token, alertIds, centerTime, maxTimeBefore, maxCountBefore, maxTimeAfter, maxCountAfter);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.AlertOccurrence[]> AlertsGetAroundWithSpanAsync(string token, System.Guid[] alertIds, System.DateTime centerTime, ConfigApiSharp.ServerCommandService.TimeDuration maxTimeBefore, int maxCountBefore, ConfigApiSharp.ServerCommandService.TimeDuration maxTimeAfter, int maxCountAfter) {
            return base.Channel.AlertsGetAroundWithSpanAsync(token, alertIds, centerTime, maxTimeBefore, maxCountBefore, maxTimeAfter, maxCountAfter);
        }
        
        public void MatrixMonitorActivateCamera(string token, System.Guid matrixMonitorId, System.Guid deviceId) {
            base.Channel.MatrixMonitorActivateCamera(token, matrixMonitorId, deviceId);
        }
        
        public System.Threading.Tasks.Task MatrixMonitorActivateCameraAsync(string token, System.Guid matrixMonitorId, System.Guid deviceId) {
            return base.Channel.MatrixMonitorActivateCameraAsync(token, matrixMonitorId, deviceId);
        }
        
        public ConfigApiSharp.ServerCommandService.Change[] QueryChanges(string token, System.DateTime changesFrom) {
            return base.Channel.QueryChanges(token, changesFrom);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.Change[]> QueryChangesAsync(string token, System.DateTime changesFrom) {
            return base.Channel.QueryChangesAsync(token, changesFrom);
        }
        
        public ConfigApiSharp.ServerCommandService.RecorderInfo QueryRecorderInfo(string token, System.Guid recorderId) {
            return base.Channel.QueryRecorderInfo(token, recorderId);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.RecorderInfo> QueryRecorderInfoAsync(string token, System.Guid recorderId) {
            return base.Channel.QueryRecorderInfoAsync(token, recorderId);
        }
        
        public ConfigApiSharp.ServerCommandService.BookmarkReference BookmarkGetNewReference(string token, System.Guid deviceId, bool live) {
            return base.Channel.BookmarkGetNewReference(token, deviceId, live);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.BookmarkReference> BookmarkGetNewReferenceAsync(string token, System.Guid deviceId, bool live) {
            return base.Channel.BookmarkGetNewReferenceAsync(token, deviceId, live);
        }
        
        public ConfigApiSharp.ServerCommandService.Bookmark BookmarkCreate(string token, System.Guid deviceId, System.DateTime timeBegin, System.DateTime timeTrigged, System.DateTime timeEnd, string reference, string header, string description) {
            return base.Channel.BookmarkCreate(token, deviceId, timeBegin, timeTrigged, timeEnd, reference, header, description);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.Bookmark> BookmarkCreateAsync(string token, System.Guid deviceId, System.DateTime timeBegin, System.DateTime timeTrigged, System.DateTime timeEnd, string reference, string header, string description) {
            return base.Channel.BookmarkCreateAsync(token, deviceId, timeBegin, timeTrigged, timeEnd, reference, header, description);
        }
        
        public ConfigApiSharp.ServerCommandService.Bookmark BookmarkUpdate(string token, System.Guid bookmarkId, System.Guid deviceId, System.DateTime timeBegin, System.DateTime timeTrigged, System.DateTime timeEnd, string reference, string header, string description) {
            return base.Channel.BookmarkUpdate(token, bookmarkId, deviceId, timeBegin, timeTrigged, timeEnd, reference, header, description);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.Bookmark> BookmarkUpdateAsync(string token, System.Guid bookmarkId, System.Guid deviceId, System.DateTime timeBegin, System.DateTime timeTrigged, System.DateTime timeEnd, string reference, string header, string description) {
            return base.Channel.BookmarkUpdateAsync(token, bookmarkId, deviceId, timeBegin, timeTrigged, timeEnd, reference, header, description);
        }
        
        public void BookmarkDelete(string token, System.Guid bookmarkId) {
            base.Channel.BookmarkDelete(token, bookmarkId);
        }
        
        public System.Threading.Tasks.Task BookmarkDeleteAsync(string token, System.Guid bookmarkId) {
            return base.Channel.BookmarkDeleteAsync(token, bookmarkId);
        }
        
        public ConfigApiSharp.ServerCommandService.Bookmark BookmarkGet(string token, System.Guid bookmarkId) {
            return base.Channel.BookmarkGet(token, bookmarkId);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.Bookmark> BookmarkGetAsync(string token, System.Guid bookmarkId) {
            return base.Channel.BookmarkGetAsync(token, bookmarkId);
        }
        
        public ConfigApiSharp.ServerCommandService.Bookmark[] BookmarkSearchTime(string token, System.DateTime time, ConfigApiSharp.ServerCommandService.TimeDuration timeLimit, int countLimit, ConfigApiSharp.ServerCommandService.MediaDeviceType[] deviceTypes, System.Guid[] optDeviceIds, string[] optUsers, string optSearchStr) {
            return base.Channel.BookmarkSearchTime(token, time, timeLimit, countLimit, deviceTypes, optDeviceIds, optUsers, optSearchStr);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.Bookmark[]> BookmarkSearchTimeAsync(string token, System.DateTime time, ConfigApiSharp.ServerCommandService.TimeDuration timeLimit, int countLimit, ConfigApiSharp.ServerCommandService.MediaDeviceType[] deviceTypes, System.Guid[] optDeviceIds, string[] optUsers, string optSearchStr) {
            return base.Channel.BookmarkSearchTimeAsync(token, time, timeLimit, countLimit, deviceTypes, optDeviceIds, optUsers, optSearchStr);
        }
        
        public ConfigApiSharp.ServerCommandService.Bookmark[] BookmarkSearchFromBookmark(string token, System.Guid fromBookmarkId, ConfigApiSharp.ServerCommandService.TimeDuration timeLimit, int countLimit, ConfigApiSharp.ServerCommandService.MediaDeviceType[] deviceTypes, System.Guid[] optDeviceIds, string[] optUsers, string optSearchStr) {
            return base.Channel.BookmarkSearchFromBookmark(token, fromBookmarkId, timeLimit, countLimit, deviceTypes, optDeviceIds, optUsers, optSearchStr);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.Bookmark[]> BookmarkSearchFromBookmarkAsync(string token, System.Guid fromBookmarkId, ConfigApiSharp.ServerCommandService.TimeDuration timeLimit, int countLimit, ConfigApiSharp.ServerCommandService.MediaDeviceType[] deviceTypes, System.Guid[] optDeviceIds, string[] optUsers, string optSearchStr) {
            return base.Channel.BookmarkSearchFromBookmarkAsync(token, fromBookmarkId, timeLimit, countLimit, deviceTypes, optDeviceIds, optUsers, optSearchStr);
        }
        
        public ConfigApiSharp.ServerCommandService.MarkedDataReference MarkedDataGetNewReference(string token, System.Guid[] deviceId, bool live) {
            return base.Channel.MarkedDataGetNewReference(token, deviceId, live);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.MarkedDataReference> MarkedDataGetNewReferenceAsync(string token, System.Guid[] deviceId, bool live) {
            return base.Channel.MarkedDataGetNewReferenceAsync(token, deviceId, live);
        }
        
        public ConfigApiSharp.ServerCommandService.MarkedDataResult MarkedDataCreate(string token, System.Guid markedDataId, System.Guid[] deviceIds, System.DateTime timeStart, System.DateTime timeTag, System.DateTime timeEnd, string reference, string header, string description, int markedDataType, bool useRetention, System.DateTime retentionExpire, ConfigApiSharp.ServerCommandService.RetentionOption retentionOption) {
            return base.Channel.MarkedDataCreate(token, markedDataId, deviceIds, timeStart, timeTag, timeEnd, reference, header, description, markedDataType, useRetention, retentionExpire, retentionOption);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.MarkedDataResult> MarkedDataCreateAsync(string token, System.Guid markedDataId, System.Guid[] deviceIds, System.DateTime timeStart, System.DateTime timeTag, System.DateTime timeEnd, string reference, string header, string description, int markedDataType, bool useRetention, System.DateTime retentionExpire, ConfigApiSharp.ServerCommandService.RetentionOption retentionOption) {
            return base.Channel.MarkedDataCreateAsync(token, markedDataId, deviceIds, timeStart, timeTag, timeEnd, reference, header, description, markedDataType, useRetention, retentionExpire, retentionOption);
        }
        
        public ConfigApiSharp.ServerCommandService.MarkedDataResult MarkedDataUpdate(string token, System.Guid markedDataId, System.Guid[] deviceIds, System.DateTime timeStart, System.DateTime timeTag, System.DateTime timeEnd, string reference, string header, string description, int markedDataType, bool useRetention, System.DateTime retentionExpire, ConfigApiSharp.ServerCommandService.RetentionOption retentionOption) {
            return base.Channel.MarkedDataUpdate(token, markedDataId, deviceIds, timeStart, timeTag, timeEnd, reference, header, description, markedDataType, useRetention, retentionExpire, retentionOption);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.MarkedDataResult> MarkedDataUpdateAsync(string token, System.Guid markedDataId, System.Guid[] deviceIds, System.DateTime timeStart, System.DateTime timeTag, System.DateTime timeEnd, string reference, string header, string description, int markedDataType, bool useRetention, System.DateTime retentionExpire, ConfigApiSharp.ServerCommandService.RetentionOption retentionOption) {
            return base.Channel.MarkedDataUpdateAsync(token, markedDataId, deviceIds, timeStart, timeTag, timeEnd, reference, header, description, markedDataType, useRetention, retentionExpire, retentionOption);
        }
        
        public ConfigApiSharp.ServerCommandService.MarkedDataResult[] MarkedDataDelete(string token, System.Guid[] markedDataIds) {
            return base.Channel.MarkedDataDelete(token, markedDataIds);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.MarkedDataResult[]> MarkedDataDeleteAsync(string token, System.Guid[] markedDataIds) {
            return base.Channel.MarkedDataDeleteAsync(token, markedDataIds);
        }
        
        public ConfigApiSharp.ServerCommandService.MarkedData MarkedDataGet(string token, System.Guid markedDataId) {
            return base.Channel.MarkedDataGet(token, markedDataId);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.MarkedData> MarkedDataGetAsync(string token, System.Guid markedDataId) {
            return base.Channel.MarkedDataGetAsync(token, markedDataId);
        }
        
        public ConfigApiSharp.ServerCommandService.MarkedData[] MarkedDataSearch(
                    string token, 
                    System.Guid[] deviceIds, 
                    string searchText, 
                    string[] users, 
                    System.DateTime createdFromTime, 
                    System.DateTime createdToTime, 
                    System.DateTime markedDataFromTime, 
                    System.DateTime markedDataToTime, 
                    System.DateTime tagTimeFromTime, 
                    System.DateTime tagTimeToTime, 
                    System.DateTime retentionExpireFrom, 
                    System.DateTime retentionExpireTo, 
                    int pageIndex, 
                    int pageSize, 
                    ConfigApiSharp.ServerCommandService.SortOrderOption sortOrder, 
                    bool sortAscending) {
            return base.Channel.MarkedDataSearch(token, deviceIds, searchText, users, createdFromTime, createdToTime, markedDataFromTime, markedDataToTime, tagTimeFromTime, tagTimeToTime, retentionExpireFrom, retentionExpireTo, pageIndex, pageSize, sortOrder, sortAscending);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.MarkedData[]> MarkedDataSearchAsync(
                    string token, 
                    System.Guid[] deviceIds, 
                    string searchText, 
                    string[] users, 
                    System.DateTime createdFromTime, 
                    System.DateTime createdToTime, 
                    System.DateTime markedDataFromTime, 
                    System.DateTime markedDataToTime, 
                    System.DateTime tagTimeFromTime, 
                    System.DateTime tagTimeToTime, 
                    System.DateTime retentionExpireFrom, 
                    System.DateTime retentionExpireTo, 
                    int pageIndex, 
                    int pageSize, 
                    ConfigApiSharp.ServerCommandService.SortOrderOption sortOrder, 
                    bool sortAscending) {
            return base.Channel.MarkedDataSearchAsync(token, deviceIds, searchText, users, createdFromTime, createdToTime, markedDataFromTime, markedDataToTime, tagTimeFromTime, tagTimeToTime, retentionExpireFrom, retentionExpireTo, pageIndex, pageSize, sortOrder, sortAscending);
        }
        
        public ConfigApiSharp.ServerCommandService.ClientProfile GetClientProfile(string token, bool withSetting) {
            return base.Channel.GetClientProfile(token, withSetting);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.ClientProfile> GetClientProfileAsync(string token, bool withSetting) {
            return base.Channel.GetClientProfileAsync(token, withSetting);
        }
        
        public ConfigApiSharp.ServerCommandService.PresetInfo[] GetPresets(string token, System.Guid deviceId) {
            return base.Channel.GetPresets(token, deviceId);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ServerCommandService.PresetInfo[]> GetPresetsAsync(string token, System.Guid deviceId) {
            return base.Channel.GetPresetsAsync(token, deviceId);
        }
        
        public void DeletePreset(string token, System.Guid id, System.Guid deviceId) {
            base.Channel.DeletePreset(token, id, deviceId);
        }
        
        public System.Threading.Tasks.Task DeletePresetAsync(string token, System.Guid id, System.Guid deviceId) {
            return base.Channel.DeletePresetAsync(token, id, deviceId);
        }
        
        public void UpdatePresetName(string token, System.Guid id, System.Guid deviceId, string newName) {
            base.Channel.UpdatePresetName(token, id, deviceId, newName);
        }
        
        public System.Threading.Tasks.Task UpdatePresetNameAsync(string token, System.Guid id, System.Guid deviceId, string newName) {
            return base.Channel.UpdatePresetNameAsync(token, id, deviceId, newName);
        }
        
        public void UpdatePresetPosition(string token, System.Guid id, System.Guid deviceId) {
            base.Channel.UpdatePresetPosition(token, id, deviceId);
        }
        
        public System.Threading.Tasks.Task UpdatePresetPositionAsync(string token, System.Guid id, System.Guid deviceId) {
            return base.Channel.UpdatePresetPositionAsync(token, id, deviceId);
        }
        
        public System.Guid CreatePreset(string token, System.Guid deviceId, string name) {
            return base.Channel.CreatePreset(token, deviceId, name);
        }
        
        public System.Threading.Tasks.Task<System.Guid> CreatePresetAsync(string token, System.Guid deviceId, string name) {
            return base.Channel.CreatePresetAsync(token, deviceId, name);
        }
        
        public void OrderPresets(string token, System.Guid deviceId, System.Guid[] ids) {
            base.Channel.OrderPresets(token, deviceId, ids);
        }
        
        public System.Threading.Tasks.Task OrderPresetsAsync(string token, System.Guid deviceId, System.Guid[] ids) {
            return base.Channel.OrderPresetsAsync(token, deviceId, ids);
        }
    }
}
