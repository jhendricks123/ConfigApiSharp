//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConfigApiSharp.ConfigurationApiService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConfigurationItem", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI")]
    [System.SerializableAttribute()]
    public partial class ConfigurationItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ConfigurationApiService.ConfigurationItem[] ChildrenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChildrenFilledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ConfigurationApiService.EnablePropertyInfo EnablePropertyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] MethodIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ConfigurationApiService.Property[] PropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerCookieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UIHintField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ConfigurationApiService.ConfigurationItem[] Children {
            get {
                return this.ChildrenField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildrenField, value) != true)) {
                    this.ChildrenField = value;
                    this.RaisePropertyChanged("Children");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChildrenFilled {
            get {
                return this.ChildrenFilledField;
            }
            set {
                if ((this.ChildrenFilledField.Equals(value) != true)) {
                    this.ChildrenFilledField = value;
                    this.RaisePropertyChanged("ChildrenFilled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ConfigurationApiService.EnablePropertyInfo EnableProperty {
            get {
                return this.EnablePropertyField;
            }
            set {
                if ((object.ReferenceEquals(this.EnablePropertyField, value) != true)) {
                    this.EnablePropertyField = value;
                    this.RaisePropertyChanged("EnableProperty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemCategory {
            get {
                return this.ItemCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemCategoryField, value) != true)) {
                    this.ItemCategoryField = value;
                    this.RaisePropertyChanged("ItemCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemType {
            get {
                return this.ItemTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemTypeField, value) != true)) {
                    this.ItemTypeField = value;
                    this.RaisePropertyChanged("ItemType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] MethodIds {
            get {
                return this.MethodIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodIdsField, value) != true)) {
                    this.MethodIdsField = value;
                    this.RaisePropertyChanged("MethodIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentPath {
            get {
                return this.ParentPathField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentPathField, value) != true)) {
                    this.ParentPathField = value;
                    this.RaisePropertyChanged("ParentPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ConfigurationApiService.Property[] Properties {
            get {
                return this.PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertiesField, value) != true)) {
                    this.PropertiesField = value;
                    this.RaisePropertyChanged("Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerCookie {
            get {
                return this.ServerCookieField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerCookieField, value) != true)) {
                    this.ServerCookieField = value;
                    this.RaisePropertyChanged("ServerCookie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortKey {
            get {
                return this.SortKeyField;
            }
            set {
                if ((this.SortKeyField.Equals(value) != true)) {
                    this.SortKeyField = value;
                    this.RaisePropertyChanged("SortKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UIHint {
            get {
                return this.UIHintField;
            }
            set {
                if ((object.ReferenceEquals(this.UIHintField, value) != true)) {
                    this.UIHintField = value;
                    this.RaisePropertyChanged("UIHint");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnablePropertyInfo", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI")]
    [System.SerializableAttribute()]
    public partial class EnablePropertyInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranslationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UIToFollowEnabledField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranslationId {
            get {
                return this.TranslationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TranslationIdField, value) != true)) {
                    this.TranslationIdField = value;
                    this.RaisePropertyChanged("TranslationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UIToFollowEnabled {
            get {
                return this.UIToFollowEnabledField;
            }
            set {
                if ((this.UIToFollowEnabledField.Equals(value) != true)) {
                    this.UIToFollowEnabledField = value;
                    this.RaisePropertyChanged("UIToFollowEnabled");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Property", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI")]
    [System.SerializableAttribute()]
    public partial class Property : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSettableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ItemReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SelectedValueTypeInfoNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServerValidationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToolTipTranslationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranslationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UIImportanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ConfigurationApiService.ValueTypeInfo[] ValueTypeInfosField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSettable {
            get {
                return this.IsSettableField;
            }
            set {
                if ((this.IsSettableField.Equals(value) != true)) {
                    this.IsSettableField = value;
                    this.RaisePropertyChanged("IsSettable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ItemReference {
            get {
                return this.ItemReferenceField;
            }
            set {
                if ((this.ItemReferenceField.Equals(value) != true)) {
                    this.ItemReferenceField = value;
                    this.RaisePropertyChanged("ItemReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SelectedValueTypeInfoName {
            get {
                return this.SelectedValueTypeInfoNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedValueTypeInfoNameField, value) != true)) {
                    this.SelectedValueTypeInfoNameField = value;
                    this.RaisePropertyChanged("SelectedValueTypeInfoName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServerValidation {
            get {
                return this.ServerValidationField;
            }
            set {
                if ((this.ServerValidationField.Equals(value) != true)) {
                    this.ServerValidationField = value;
                    this.RaisePropertyChanged("ServerValidation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortKey {
            get {
                return this.SortKeyField;
            }
            set {
                if ((this.SortKeyField.Equals(value) != true)) {
                    this.SortKeyField = value;
                    this.RaisePropertyChanged("SortKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToolTipTranslationId {
            get {
                return this.ToolTipTranslationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ToolTipTranslationIdField, value) != true)) {
                    this.ToolTipTranslationIdField = value;
                    this.RaisePropertyChanged("ToolTipTranslationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranslationId {
            get {
                return this.TranslationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TranslationIdField, value) != true)) {
                    this.TranslationIdField = value;
                    this.RaisePropertyChanged("TranslationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UIImportance {
            get {
                return this.UIImportanceField;
            }
            set {
                if ((this.UIImportanceField.Equals(value) != true)) {
                    this.UIImportanceField = value;
                    this.RaisePropertyChanged("UIImportance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValueType {
            get {
                return this.ValueTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueTypeField, value) != true)) {
                    this.ValueTypeField = value;
                    this.RaisePropertyChanged("ValueType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ConfigurationApiService.ValueTypeInfo[] ValueTypeInfos {
            get {
                return this.ValueTypeInfosField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueTypeInfosField, value) != true)) {
                    this.ValueTypeInfosField = value;
                    this.RaisePropertyChanged("ValueTypeInfos");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValueTypeInfo", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI")]
    [System.SerializableAttribute()]
    public partial class ValueTypeInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranslationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranslationId {
            get {
                return this.TranslationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TranslationIdField, value) != true)) {
                    this.TranslationIdField = value;
                    this.RaisePropertyChanged("TranslationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArgumentExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
        "ltException")]
    [System.SerializableAttribute()]
    public partial class ArgumentExceptionFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArgumentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranslationIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArgumentName {
            get {
                return this.ArgumentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ArgumentNameField, value) != true)) {
                    this.ArgumentNameField = value;
                    this.RaisePropertyChanged("ArgumentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranslationId {
            get {
                return this.TranslationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TranslationIdField, value) != true)) {
                    this.TranslationIdField = value;
                    this.RaisePropertyChanged("TranslationId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArgumentNullExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
        "ltException")]
    [System.SerializableAttribute()]
    public partial class ArgumentNullExceptionFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArgumentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranslationIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArgumentName {
            get {
                return this.ArgumentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ArgumentNameField, value) != true)) {
                    this.ArgumentNameField = value;
                    this.RaisePropertyChanged("ArgumentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranslationId {
            get {
                return this.TranslationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TranslationIdField, value) != true)) {
                    this.TranslationIdField = value;
                    this.RaisePropertyChanged("TranslationId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LicenseExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
        "ltException")]
    [System.SerializableAttribute()]
    public partial class LicenseExceptionFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranslationIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranslationId {
            get {
                return this.TranslationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TranslationIdField, value) != true)) {
                    this.TranslationIdField = value;
                    this.RaisePropertyChanged("TranslationId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NotSupportedExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
        "ltException")]
    [System.SerializableAttribute()]
    public partial class NotSupportedExceptionFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranslationIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranslationId {
            get {
                return this.TranslationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TranslationIdField, value) != true)) {
                    this.TranslationIdField = value;
                    this.RaisePropertyChanged("TranslationId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PathNotFoundExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
        "ltException")]
    [System.SerializableAttribute()]
    public partial class PathNotFoundExceptionFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranslationIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranslationId {
            get {
                return this.TranslationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TranslationIdField, value) != true)) {
                    this.TranslationIdField = value;
                    this.RaisePropertyChanged("TranslationId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UnauthorizedAccessFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
        "ltException")]
    [System.SerializableAttribute()]
    public partial class UnauthorizedAccessFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranslationIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranslationId {
            get {
                return this.TranslationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TranslationIdField, value) != true)) {
                    this.TranslationIdField = value;
                    this.RaisePropertyChanged("TranslationId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServerExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
        "ltException")]
    [System.SerializableAttribute()]
    public partial class ServerExceptionFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranslationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranslationId {
            get {
                return this.TranslationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TranslationIdField, value) != true)) {
                    this.TranslationIdField = value;
                    this.RaisePropertyChanged("TranslationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidateResult", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI")]
    [System.SerializableAttribute()]
    public partial class ValidateResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ConfigurationApiService.ErrorResult[] ErrorResultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigApiSharp.ConfigurationApiService.ConfigurationItem ResultItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValidatedOkField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ConfigurationApiService.ErrorResult[] ErrorResults {
            get {
                return this.ErrorResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorResultsField, value) != true)) {
                    this.ErrorResultsField = value;
                    this.RaisePropertyChanged("ErrorResults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigApiSharp.ConfigurationApiService.ConfigurationItem ResultItem {
            get {
                return this.ResultItemField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultItemField, value) != true)) {
                    this.ResultItemField = value;
                    this.RaisePropertyChanged("ResultItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ValidatedOk {
            get {
                return this.ValidatedOkField;
            }
            set {
                if ((this.ValidatedOkField.Equals(value) != true)) {
                    this.ValidatedOkField = value;
                    this.RaisePropertyChanged("ValidatedOk");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ErrorResult", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI")]
    [System.SerializableAttribute()]
    public partial class ErrorResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorPropertyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTextIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorProperty {
            get {
                return this.ErrorPropertyField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorPropertyField, value) != true)) {
                    this.ErrorPropertyField = value;
                    this.RaisePropertyChanged("ErrorProperty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorText {
            get {
                return this.ErrorTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTextField, value) != true)) {
                    this.ErrorTextField = value;
                    this.RaisePropertyChanged("ErrorText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorTextId {
            get {
                return this.ErrorTextIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTextIdField, value) != true)) {
                    this.ErrorTextIdField = value;
                    this.RaisePropertyChanged("ErrorTextId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MethodInfo", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI")]
    [System.SerializableAttribute()]
    public partial class MethodInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] BitmapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MethodIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranslationIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Bitmap {
            get {
                return this.BitmapField;
            }
            set {
                if ((object.ReferenceEquals(this.BitmapField, value) != true)) {
                    this.BitmapField = value;
                    this.RaisePropertyChanged("Bitmap");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MethodId {
            get {
                return this.MethodIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodIdField, value) != true)) {
                    this.MethodIdField = value;
                    this.RaisePropertyChanged("MethodId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranslationId {
            get {
                return this.TranslationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TranslationIdField, value) != true)) {
                    this.TranslationIdField = value;
                    this.RaisePropertyChanged("TranslationId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://VideoOS.Net/ConfigurationService", ConfigurationName="ConfigurationApiService.IConfigurationService")]
    public interface IConfigurationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetItem", ReplyAction="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetItemResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ArgumentExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetItemArgumentExce" +
            "ptionFaultFault", Name="ArgumentExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ArgumentNullExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetItemArgumentNull" +
            "ExceptionFaultFault", Name="ArgumentNullExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.LicenseExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetItemLicenseExcep" +
            "tionFaultFault", Name="LicenseExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.NotSupportedExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetItemNotSupported" +
            "ExceptionFaultFault", Name="NotSupportedExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.PathNotFoundExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetItemPathNotFound" +
            "ExceptionFaultFault", Name="PathNotFoundExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.UnauthorizedAccessFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetItemUnauthorized" +
            "AccessFaultFault", Name="UnauthorizedAccessFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ServerExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetItemServerExcept" +
            "ionFaultFault", Name="ServerExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        ConfigApiSharp.ConfigurationApiService.ConfigurationItem GetItem(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetItem", ReplyAction="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetItemResponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ConfigurationApiService.ConfigurationItem> GetItemAsync(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetItems", ReplyAction="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetItemsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ArgumentExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetItemsArgumentExc" +
            "eptionFaultFault", Name="ArgumentExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ArgumentNullExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetItemsArgumentNul" +
            "lExceptionFaultFault", Name="ArgumentNullExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.LicenseExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetItemsLicenseExce" +
            "ptionFaultFault", Name="LicenseExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.NotSupportedExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetItemsNotSupporte" +
            "dExceptionFaultFault", Name="NotSupportedExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.PathNotFoundExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetItemsPathNotFoun" +
            "dExceptionFaultFault", Name="PathNotFoundExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.UnauthorizedAccessFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetItemsUnauthorize" +
            "dAccessFaultFault", Name="UnauthorizedAccessFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ServerExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetItemsServerExcep" +
            "tionFaultFault", Name="ServerExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        ConfigApiSharp.ConfigurationApiService.ConfigurationItem[] GetItems(string itemType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetItems", ReplyAction="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetItemsResponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ConfigurationApiService.ConfigurationItem[]> GetItemsAsync(string itemType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/SetItem", ReplyAction="http://VideoOS.Net/ConfigurationService/IConfigurationService/SetItemResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ArgumentExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/SetItemArgumentExce" +
            "ptionFaultFault", Name="ArgumentExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ArgumentNullExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/SetItemArgumentNull" +
            "ExceptionFaultFault", Name="ArgumentNullExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.LicenseExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/SetItemLicenseExcep" +
            "tionFaultFault", Name="LicenseExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.NotSupportedExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/SetItemNotSupported" +
            "ExceptionFaultFault", Name="NotSupportedExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.PathNotFoundExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/SetItemPathNotFound" +
            "ExceptionFaultFault", Name="PathNotFoundExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.UnauthorizedAccessFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/SetItemUnauthorized" +
            "AccessFaultFault", Name="UnauthorizedAccessFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ServerExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/SetItemServerExcept" +
            "ionFaultFault", Name="ServerExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        ConfigApiSharp.ConfigurationApiService.ValidateResult SetItem(ConfigApiSharp.ConfigurationApiService.ConfigurationItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/SetItem", ReplyAction="http://VideoOS.Net/ConfigurationService/IConfigurationService/SetItemResponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ConfigurationApiService.ValidateResult> SetItemAsync(ConfigApiSharp.ConfigurationApiService.ConfigurationItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/HasChildItems", ReplyAction="http://VideoOS.Net/ConfigurationService/IConfigurationService/HasChildItemsRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ArgumentExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/HasChildItemsArgume" +
            "ntExceptionFaultFault", Name="ArgumentExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ArgumentNullExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/HasChildItemsArgume" +
            "ntNullExceptionFaultFault", Name="ArgumentNullExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.LicenseExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/HasChildItemsLicens" +
            "eExceptionFaultFault", Name="LicenseExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.NotSupportedExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/HasChildItemsNotSup" +
            "portedExceptionFaultFault", Name="NotSupportedExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.PathNotFoundExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/HasChildItemsPathNo" +
            "tFoundExceptionFaultFault", Name="PathNotFoundExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.UnauthorizedAccessFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/HasChildItemsUnauth" +
            "orizedAccessFaultFault", Name="UnauthorizedAccessFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ServerExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/HasChildItemsServer" +
            "ExceptionFaultFault", Name="ServerExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        bool HasChildItems(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/HasChildItems", ReplyAction="http://VideoOS.Net/ConfigurationService/IConfigurationService/HasChildItemsRespon" +
            "se")]
        System.Threading.Tasks.Task<bool> HasChildItemsAsync(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetChildItems", ReplyAction="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetChildItemsRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ArgumentExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetChildItemsArgume" +
            "ntExceptionFaultFault", Name="ArgumentExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ArgumentNullExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetChildItemsArgume" +
            "ntNullExceptionFaultFault", Name="ArgumentNullExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.LicenseExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetChildItemsLicens" +
            "eExceptionFaultFault", Name="LicenseExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.NotSupportedExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetChildItemsNotSup" +
            "portedExceptionFaultFault", Name="NotSupportedExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.PathNotFoundExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetChildItemsPathNo" +
            "tFoundExceptionFaultFault", Name="PathNotFoundExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.UnauthorizedAccessFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetChildItemsUnauth" +
            "orizedAccessFaultFault", Name="UnauthorizedAccessFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ServerExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetChildItemsServer" +
            "ExceptionFaultFault", Name="ServerExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        ConfigApiSharp.ConfigurationApiService.ConfigurationItem[] GetChildItems(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetChildItems", ReplyAction="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetChildItemsRespon" +
            "se")]
        System.Threading.Tasks.Task<ConfigApiSharp.ConfigurationApiService.ConfigurationItem[]> GetChildItemsAsync(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/ConstructItem", ReplyAction="http://VideoOS.Net/ConfigurationService/IConfigurationService/ConstructItemRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ArgumentExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/ConstructItemArgume" +
            "ntExceptionFaultFault", Name="ArgumentExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ArgumentNullExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/ConstructItemArgume" +
            "ntNullExceptionFaultFault", Name="ArgumentNullExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.LicenseExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/ConstructItemLicens" +
            "eExceptionFaultFault", Name="LicenseExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.NotSupportedExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/ConstructItemNotSup" +
            "portedExceptionFaultFault", Name="NotSupportedExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.PathNotFoundExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/ConstructItemPathNo" +
            "tFoundExceptionFaultFault", Name="PathNotFoundExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.UnauthorizedAccessFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/ConstructItemUnauth" +
            "orizedAccessFaultFault", Name="UnauthorizedAccessFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ServerExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/ConstructItemServer" +
            "ExceptionFaultFault", Name="ServerExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        ConfigApiSharp.ConfigurationApiService.ConfigurationItem ConstructItem(string itemType, ConfigApiSharp.ConfigurationApiService.Property[] properties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/ConstructItem", ReplyAction="http://VideoOS.Net/ConfigurationService/IConfigurationService/ConstructItemRespon" +
            "se")]
        System.Threading.Tasks.Task<ConfigApiSharp.ConfigurationApiService.ConfigurationItem> ConstructItemAsync(string itemType, ConfigApiSharp.ConfigurationApiService.Property[] properties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/ConstructChildItem", ReplyAction="http://VideoOS.Net/ConfigurationService/IConfigurationService/ConstructChildItemR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ArgumentExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/ConstructChildItemA" +
            "rgumentExceptionFaultFault", Name="ArgumentExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ArgumentNullExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/ConstructChildItemA" +
            "rgumentNullExceptionFaultFault", Name="ArgumentNullExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.LicenseExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/ConstructChildItemL" +
            "icenseExceptionFaultFault", Name="LicenseExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.NotSupportedExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/ConstructChildItemN" +
            "otSupportedExceptionFaultFault", Name="NotSupportedExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.PathNotFoundExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/ConstructChildItemP" +
            "athNotFoundExceptionFaultFault", Name="PathNotFoundExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.UnauthorizedAccessFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/ConstructChildItemU" +
            "nauthorizedAccessFaultFault", Name="UnauthorizedAccessFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ServerExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/ConstructChildItemS" +
            "erverExceptionFaultFault", Name="ServerExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        ConfigApiSharp.ConfigurationApiService.ConfigurationItem ConstructChildItem(string itemType, string parentPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/ConstructChildItem", ReplyAction="http://VideoOS.Net/ConfigurationService/IConfigurationService/ConstructChildItemR" +
            "esponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ConfigurationApiService.ConfigurationItem> ConstructChildItemAsync(string itemType, string parentPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/ValidateItem", ReplyAction="http://VideoOS.Net/ConfigurationService/IConfigurationService/ValidateItemRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ArgumentExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/ValidateItemArgumen" +
            "tExceptionFaultFault", Name="ArgumentExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ArgumentNullExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/ValidateItemArgumen" +
            "tNullExceptionFaultFault", Name="ArgumentNullExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.LicenseExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/ValidateItemLicense" +
            "ExceptionFaultFault", Name="LicenseExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.NotSupportedExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/ValidateItemNotSupp" +
            "ortedExceptionFaultFault", Name="NotSupportedExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.PathNotFoundExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/ValidateItemPathNot" +
            "FoundExceptionFaultFault", Name="PathNotFoundExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.UnauthorizedAccessFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/ValidateItemUnautho" +
            "rizedAccessFaultFault", Name="UnauthorizedAccessFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ServerExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/ValidateItemServerE" +
            "xceptionFaultFault", Name="ServerExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        ConfigApiSharp.ConfigurationApiService.ValidateResult ValidateItem(ConfigApiSharp.ConfigurationApiService.ConfigurationItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/ValidateItem", ReplyAction="http://VideoOS.Net/ConfigurationService/IConfigurationService/ValidateItemRespons" +
            "e")]
        System.Threading.Tasks.Task<ConfigApiSharp.ConfigurationApiService.ValidateResult> ValidateItemAsync(ConfigApiSharp.ConfigurationApiService.ConfigurationItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/DeleteItem", ReplyAction="http://VideoOS.Net/ConfigurationService/IConfigurationService/DeleteItemResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ArgumentExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/DeleteItemArgumentE" +
            "xceptionFaultFault", Name="ArgumentExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ArgumentNullExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/DeleteItemArgumentN" +
            "ullExceptionFaultFault", Name="ArgumentNullExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.LicenseExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/DeleteItemLicenseEx" +
            "ceptionFaultFault", Name="LicenseExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.NotSupportedExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/DeleteItemNotSuppor" +
            "tedExceptionFaultFault", Name="NotSupportedExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.PathNotFoundExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/DeleteItemPathNotFo" +
            "undExceptionFaultFault", Name="PathNotFoundExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.UnauthorizedAccessFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/DeleteItemUnauthori" +
            "zedAccessFaultFault", Name="UnauthorizedAccessFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ServerExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/DeleteItemServerExc" +
            "eptionFaultFault", Name="ServerExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        void DeleteItem(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/DeleteItem", ReplyAction="http://VideoOS.Net/ConfigurationService/IConfigurationService/DeleteItemResponse")]
        System.Threading.Tasks.Task DeleteItemAsync(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetDependantItems", ReplyAction="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetDependantItemsRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ArgumentExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetDependantItemsAr" +
            "gumentExceptionFaultFault", Name="ArgumentExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ArgumentNullExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetDependantItemsAr" +
            "gumentNullExceptionFaultFault", Name="ArgumentNullExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.LicenseExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetDependantItemsLi" +
            "censeExceptionFaultFault", Name="LicenseExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.NotSupportedExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetDependantItemsNo" +
            "tSupportedExceptionFaultFault", Name="NotSupportedExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.PathNotFoundExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetDependantItemsPa" +
            "thNotFoundExceptionFaultFault", Name="PathNotFoundExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.UnauthorizedAccessFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetDependantItemsUn" +
            "authorizedAccessFaultFault", Name="UnauthorizedAccessFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ServerExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetDependantItemsSe" +
            "rverExceptionFaultFault", Name="ServerExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        ConfigApiSharp.ConfigurationApiService.ConfigurationItem[] GetDependantItems(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetDependantItems", ReplyAction="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetDependantItemsRe" +
            "sponse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ConfigurationApiService.ConfigurationItem[]> GetDependantItemsAsync(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetMethodInfos", ReplyAction="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetMethodInfosRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ArgumentExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetMethodInfosArgum" +
            "entExceptionFaultFault", Name="ArgumentExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ArgumentNullExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetMethodInfosArgum" +
            "entNullExceptionFaultFault", Name="ArgumentNullExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.LicenseExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetMethodInfosLicen" +
            "seExceptionFaultFault", Name="LicenseExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.NotSupportedExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetMethodInfosNotSu" +
            "pportedExceptionFaultFault", Name="NotSupportedExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.PathNotFoundExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetMethodInfosPathN" +
            "otFoundExceptionFaultFault", Name="PathNotFoundExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.UnauthorizedAccessFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetMethodInfosUnaut" +
            "horizedAccessFaultFault", Name="UnauthorizedAccessFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ServerExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetMethodInfosServe" +
            "rExceptionFaultFault", Name="ServerExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        ConfigApiSharp.ConfigurationApiService.MethodInfo[] GetMethodInfos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetMethodInfos", ReplyAction="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetMethodInfosRespo" +
            "nse")]
        System.Threading.Tasks.Task<ConfigApiSharp.ConfigurationApiService.MethodInfo[]> GetMethodInfosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetMethodInfo", ReplyAction="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetMethodInfoRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ArgumentExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetMethodInfoArgume" +
            "ntExceptionFaultFault", Name="ArgumentExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ArgumentNullExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetMethodInfoArgume" +
            "ntNullExceptionFaultFault", Name="ArgumentNullExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.LicenseExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetMethodInfoLicens" +
            "eExceptionFaultFault", Name="LicenseExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.NotSupportedExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetMethodInfoNotSup" +
            "portedExceptionFaultFault", Name="NotSupportedExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.PathNotFoundExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetMethodInfoPathNo" +
            "tFoundExceptionFaultFault", Name="PathNotFoundExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.UnauthorizedAccessFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetMethodInfoUnauth" +
            "orizedAccessFaultFault", Name="UnauthorizedAccessFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ServerExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetMethodInfoServer" +
            "ExceptionFaultFault", Name="ServerExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        ConfigApiSharp.ConfigurationApiService.MethodInfo GetMethodInfo(string methodId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetMethodInfo", ReplyAction="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetMethodInfoRespon" +
            "se")]
        System.Threading.Tasks.Task<ConfigApiSharp.ConfigurationApiService.MethodInfo> GetMethodInfoAsync(string methodId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/InvokeMethod", ReplyAction="http://VideoOS.Net/ConfigurationService/IConfigurationService/InvokeMethodRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ArgumentExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/InvokeMethodArgumen" +
            "tExceptionFaultFault", Name="ArgumentExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ArgumentNullExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/InvokeMethodArgumen" +
            "tNullExceptionFaultFault", Name="ArgumentNullExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.LicenseExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/InvokeMethodLicense" +
            "ExceptionFaultFault", Name="LicenseExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.NotSupportedExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/InvokeMethodNotSupp" +
            "ortedExceptionFaultFault", Name="NotSupportedExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.PathNotFoundExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/InvokeMethodPathNot" +
            "FoundExceptionFaultFault", Name="PathNotFoundExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.UnauthorizedAccessFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/InvokeMethodUnautho" +
            "rizedAccessFaultFault", Name="UnauthorizedAccessFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ServerExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/InvokeMethodServerE" +
            "xceptionFaultFault", Name="ServerExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        ConfigApiSharp.ConfigurationApiService.ConfigurationItem InvokeMethod(ConfigApiSharp.ConfigurationApiService.ConfigurationItem item, string method);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/InvokeMethod", ReplyAction="http://VideoOS.Net/ConfigurationService/IConfigurationService/InvokeMethodRespons" +
            "e")]
        System.Threading.Tasks.Task<ConfigApiSharp.ConfigurationApiService.ConfigurationItem> InvokeMethodAsync(ConfigApiSharp.ConfigurationApiService.ConfigurationItem item, string method);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetTranslations", ReplyAction="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetTranslationsResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ArgumentExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetTranslationsArgu" +
            "mentExceptionFaultFault", Name="ArgumentExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ArgumentNullExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetTranslationsArgu" +
            "mentNullExceptionFaultFault", Name="ArgumentNullExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.LicenseExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetTranslationsLice" +
            "nseExceptionFaultFault", Name="LicenseExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.NotSupportedExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetTranslationsNotS" +
            "upportedExceptionFaultFault", Name="NotSupportedExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.PathNotFoundExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetTranslationsPath" +
            "NotFoundExceptionFaultFault", Name="PathNotFoundExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.UnauthorizedAccessFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetTranslationsUnau" +
            "thorizedAccessFaultFault", Name="UnauthorizedAccessFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigApiSharp.ConfigurationApiService.ServerExceptionFault), Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetTranslationsServ" +
            "erExceptionFaultFault", Name="ServerExceptionFault", Namespace="http://schemas.datacontract.org/2004/07/VideoOS.ConfigurationAPI.ConfigurationFau" +
            "ltException")]
        System.Collections.Generic.Dictionary<string, string> GetTranslations(string languageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetTranslations", ReplyAction="http://VideoOS.Net/ConfigurationService/IConfigurationService/GetTranslationsResp" +
            "onse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTranslationsAsync(string languageId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IConfigurationServiceChannel : ConfigApiSharp.ConfigurationApiService.IConfigurationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConfigurationServiceClient : System.ServiceModel.ClientBase<ConfigApiSharp.ConfigurationApiService.IConfigurationService>, ConfigApiSharp.ConfigurationApiService.IConfigurationService {
        
        public ConfigurationServiceClient() {
        }
        
        public ConfigurationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConfigurationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConfigurationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConfigurationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ConfigApiSharp.ConfigurationApiService.ConfigurationItem GetItem(string path) {
            return base.Channel.GetItem(path);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ConfigurationApiService.ConfigurationItem> GetItemAsync(string path) {
            return base.Channel.GetItemAsync(path);
        }
        
        public ConfigApiSharp.ConfigurationApiService.ConfigurationItem[] GetItems(string itemType) {
            return base.Channel.GetItems(itemType);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ConfigurationApiService.ConfigurationItem[]> GetItemsAsync(string itemType) {
            return base.Channel.GetItemsAsync(itemType);
        }
        
        public ConfigApiSharp.ConfigurationApiService.ValidateResult SetItem(ConfigApiSharp.ConfigurationApiService.ConfigurationItem item) {
            return base.Channel.SetItem(item);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ConfigurationApiService.ValidateResult> SetItemAsync(ConfigApiSharp.ConfigurationApiService.ConfigurationItem item) {
            return base.Channel.SetItemAsync(item);
        }
        
        public bool HasChildItems(string path) {
            return base.Channel.HasChildItems(path);
        }
        
        public System.Threading.Tasks.Task<bool> HasChildItemsAsync(string path) {
            return base.Channel.HasChildItemsAsync(path);
        }
        
        public ConfigApiSharp.ConfigurationApiService.ConfigurationItem[] GetChildItems(string path) {
            return base.Channel.GetChildItems(path);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ConfigurationApiService.ConfigurationItem[]> GetChildItemsAsync(string path) {
            return base.Channel.GetChildItemsAsync(path);
        }
        
        public ConfigApiSharp.ConfigurationApiService.ConfigurationItem ConstructItem(string itemType, ConfigApiSharp.ConfigurationApiService.Property[] properties) {
            return base.Channel.ConstructItem(itemType, properties);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ConfigurationApiService.ConfigurationItem> ConstructItemAsync(string itemType, ConfigApiSharp.ConfigurationApiService.Property[] properties) {
            return base.Channel.ConstructItemAsync(itemType, properties);
        }
        
        public ConfigApiSharp.ConfigurationApiService.ConfigurationItem ConstructChildItem(string itemType, string parentPath) {
            return base.Channel.ConstructChildItem(itemType, parentPath);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ConfigurationApiService.ConfigurationItem> ConstructChildItemAsync(string itemType, string parentPath) {
            return base.Channel.ConstructChildItemAsync(itemType, parentPath);
        }
        
        public ConfigApiSharp.ConfigurationApiService.ValidateResult ValidateItem(ConfigApiSharp.ConfigurationApiService.ConfigurationItem item) {
            return base.Channel.ValidateItem(item);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ConfigurationApiService.ValidateResult> ValidateItemAsync(ConfigApiSharp.ConfigurationApiService.ConfigurationItem item) {
            return base.Channel.ValidateItemAsync(item);
        }
        
        public void DeleteItem(string path) {
            base.Channel.DeleteItem(path);
        }
        
        public System.Threading.Tasks.Task DeleteItemAsync(string path) {
            return base.Channel.DeleteItemAsync(path);
        }
        
        public ConfigApiSharp.ConfigurationApiService.ConfigurationItem[] GetDependantItems(string path) {
            return base.Channel.GetDependantItems(path);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ConfigurationApiService.ConfigurationItem[]> GetDependantItemsAsync(string path) {
            return base.Channel.GetDependantItemsAsync(path);
        }
        
        public ConfigApiSharp.ConfigurationApiService.MethodInfo[] GetMethodInfos() {
            return base.Channel.GetMethodInfos();
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ConfigurationApiService.MethodInfo[]> GetMethodInfosAsync() {
            return base.Channel.GetMethodInfosAsync();
        }
        
        public ConfigApiSharp.ConfigurationApiService.MethodInfo GetMethodInfo(string methodId) {
            return base.Channel.GetMethodInfo(methodId);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ConfigurationApiService.MethodInfo> GetMethodInfoAsync(string methodId) {
            return base.Channel.GetMethodInfoAsync(methodId);
        }
        
        public ConfigApiSharp.ConfigurationApiService.ConfigurationItem InvokeMethod(ConfigApiSharp.ConfigurationApiService.ConfigurationItem item, string method) {
            return base.Channel.InvokeMethod(item, method);
        }
        
        public System.Threading.Tasks.Task<ConfigApiSharp.ConfigurationApiService.ConfigurationItem> InvokeMethodAsync(ConfigApiSharp.ConfigurationApiService.ConfigurationItem item, string method) {
            return base.Channel.InvokeMethodAsync(item, method);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetTranslations(string languageId) {
            return base.Channel.GetTranslations(languageId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetTranslationsAsync(string languageId) {
            return base.Channel.GetTranslationsAsync(languageId);
        }
    }
}
